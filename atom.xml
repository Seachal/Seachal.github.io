<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Seachal的Blogs</title>
  
  <subtitle>记录学习的技能和遇到的问题</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://seachal.me/"/>
  <updated>2018-10-21T07:09:54.511Z</updated>
  <id>https://seachal.me/</id>
  
  <author>
    <name>Seachal</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://seachal.me/uncategorized/2018/10/21/VersionControl/2018-04-15/"/>
    <id>https://seachal.me/uncategorized/2018/10/21/VersionControl/2018-04-15/</id>
    <published>2018-10-21T07:09:54.511Z</published>
    <updated>2018-10-21T07:09:54.511Z</updated>
    
    <content type="html"><![CDATA[<p>#<br>在add文件的时候，不小心把add to working copy点击成了下面的ignore。</p><p>以至于，自己new的文件，在finder里面能够看到文件，但在cornerstone里就看不到，无法add commit。<br>怎样恢复呢？</p><ol><li>打开右上角图标<br><img src="images/15237635404571.jpg" alt=""><br>顺序使左上角两个图标选中，</li><li>然后看到<br><img src="images/15237636317730.jpg" alt=""><br>点击蓝色图标<br><img src="images/15237636988079.jpg" alt=""><br>点击 Revert to last  Update</li></ol><p><img src="images/15237637747285.jpg" alt=""><br>最后保存</p><ol><li> 最后ignore文件就显示了。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#&lt;br&gt;在add文件的时候，不小心把add to working copy点击成了下面的ignore。&lt;/p&gt;
&lt;p&gt;以至于，自己new的文件，在finder里面能够看到文件，但在cornerstone里就看不到，无法add commit。&lt;br&gt;怎样恢复呢？&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://seachal.me/uncategorized/2018/10/21/Mac/%E6%89%B9%E9%87%8F%E6%96%87%E4%BB%B6%E5%AD%97%E7%AC%A6%E9%9B%86%E8%BD%AC%E6%8D%A2%E4%B8%BAUTF-i%E8%84%9A%E6%9C%AC%EF%BC%88file%20batch%20convert%20char%20set%20%EF%BC%892018-08-19/"/>
    <id>https://seachal.me/uncategorized/2018/10/21/Mac/批量文件字符集转换为UTF-i脚本（file batch convert char set ）2018-08-19/</id>
    <published>2018-10-21T07:09:54.505Z</published>
    <updated>2018-10-21T07:09:54.505Z</updated>
    
    <content type="html"><![CDATA[<p>#<br>最近遇到一个大项目，项目使用的encoding 有GBK也有UTF-8， 在intellij中虽然可以一个一个conver，但是感觉太慢了，并且reload为UTF-8也不是长久之计，在Git中仍然是乱码。<br>  查阅了一些资料，写个脚本终于批量把gbk 转换为 utf-8了。<br>这是在mac 10.13中测试的示例。按名称查找文件，转换编码，然后替换原始文件。完美。</p><ul><li><ol><li>新建一个名为 ConvertEncoding.sh文件</li></ol></li><li><ol><li>将下面的完整代码复制到shell脚本中。</li></ol></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">     find ./ -name *.java -<span class="built_in">type</span> f | \</span><br><span class="line">     (<span class="keyword">while</span> <span class="built_in">read</span> file;</span><br><span class="line">         <span class="keyword">do</span> <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$file</span>"</span> != *.DS_Store* ]]; <span class="keyword">then</span></span><br><span class="line">         <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$file</span>"</span> != *-utf8* ]]; <span class="keyword">then</span></span><br><span class="line">             iconv -f GBK -t UTF-8 <span class="string">"<span class="variable">$file</span>"</span> &gt; <span class="string">"<span class="variable">$file</span>-utf8"</span>;</span><br><span class="line">             rm <span class="variable">$file</span>;</span><br><span class="line">             <span class="built_in">echo</span> mv <span class="string">"<span class="variable">$file</span>-utf8"</span> <span class="string">"<span class="variable">$file</span>"</span>;</span><br><span class="line">             mv <span class="string">"<span class="variable">$file</span>-utf8"</span> <span class="string">"<span class="variable">$file</span>"</span>;</span><br><span class="line">         <span class="keyword">fi</span></span><br><span class="line">     <span class="keyword">fi</span> </span><br><span class="line">     <span class="keyword">done</span>);</span><br></pre></td></tr></table></figure><p> <code>./</code> 要替换为自己的项目文件夹。<br><img src="media/15346734086983.jpg" alt="-w655"></p><ul><li><ol><li>把shell文件拖到terminal中 enter执行。</li></ol></li></ul><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">bogon:</span>~ username$ <span class="regexp">/Users/</span><span class="regexp">/Documents/</span>batchconvert.sh </span><br><span class="line">-<span class="string">bash:</span> <span class="regexp">/Users/</span>username<span class="regexp">/Documents/</span>batchconvert.<span class="string">sh:</span> Permission denied</span><br><span class="line"><span class="string">bogon:</span>~ username$ chmod <span class="number">777</span> batchconvert.sh</span><br><span class="line"><span class="string">chmod:</span> batchconvert.<span class="string">sh:</span> No such file or directory</span><br><span class="line"><span class="string">bogon:</span>~ username$ chmod <span class="number">777</span> <span class="regexp">/Users/</span>username<span class="regexp">/Documents/</span>batchconvert.sh </span><br><span class="line"><span class="string">bogon:</span>~ username$ </span><br><span class="line"><span class="string">bogon:</span>~ username$ </span><br><span class="line"><span class="string">bogon:</span>~ username$ <span class="regexp">/Users/</span>username<span class="regexp">/Documents/</span>batchconvert.sh</span><br></pre></td></tr></table></figure><p>其中 <code>chmod 777 /Users/username/Documents/batchconvert.sh</code>是给batchconvert.sh赋予全新啊。</p><!-- 参考： https://stackoverflow.com/questions/1182037/osx-change-file-encoding-iconv-recursive-->]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#&lt;br&gt;最近遇到一个大项目，项目使用的encoding 有GBK也有UTF-8， 在intellij中虽然可以一个一个conver，但是感觉太慢了，并且reload为UTF-8也不是长久之计，在Git中仍然是乱码。&lt;br&gt;  查阅了一些资料，写个脚本终于批量把gbk 转换
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://seachal.me/uncategorized/2018/10/21/ReactNative/2018-02-23/"/>
    <id>https://seachal.me/uncategorized/2018/10/21/ReactNative/2018-02-23/</id>
    <published>2018-10-21T07:09:54.505Z</published>
    <updated>2018-10-21T07:09:54.505Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WebStorm-运行ReactNative配置"><a href="#WebStorm-运行ReactNative配置" class="headerlink" title="WebStorm 运行ReactNative配置"></a>WebStorm 运行ReactNative配置</h1><p>未发布</p><p>1.在最上面找到Run菜单选择当中的Edit<br><img src="images/15193658661865.jpg" alt=""></p><p>2.<br><img src="images/15193659594223.jpg" alt=""></p><p>3.<br><img src="images/15193663403518.jpg" alt=""></p><p>4.<br><img src="images/15193661940342.jpg" alt=""></p><p><img src="images/15193662570162.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;WebStorm-运行ReactNative配置&quot;&gt;&lt;a href=&quot;#WebStorm-运行ReactNative配置&quot; class=&quot;headerlink&quot; title=&quot;WebStorm 运行ReactNative配置&quot;&gt;&lt;/a&gt;WebStorm 运行Rea
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://seachal.me/uncategorized/2018/10/21/BlogBuild/2018-02-09/"/>
    <id>https://seachal.me/uncategorized/2018/10/21/BlogBuild/2018-02-09/</id>
    <published>2018-10-21T07:09:54.499Z</published>
    <updated>2018-10-21T07:09:54.499Z</updated>
    
    <content type="html"><![CDATA[<p>#MarkDown注释，隐藏文字<br>1</p><p><code>&lt;!--.bg-blue--&gt;</code></p><p>弗朗茨·李斯特（Franz Liszt，1811年10月22日－1886年7月31日），著名匈牙利作曲家、钢琴家、指挥家，是<strong>浪漫主义前期</strong>最杰出的代表人物之一。</p><p>2</p><div class="bg-blue"><br>    <p>弗朗茨·李斯特（Franz Liszt，1811年10月22日－1886年7月31日），著名匈牙利作曲家、钢琴家、指挥家，是<strong>浪漫主义前期</strong>最杰出的代表人物之一。</p><br></div><p>3</p><!--begin.bg-blue--><p>弗朗茨·李斯特（Franz Liszt，1811年10月22日－1886年7月31日），著名匈牙利作曲家、钢琴家、指挥家，是<strong>浪漫主义前期</strong>最杰出的代表人物之一。</p><p>《钟》（意大利语：La campanella），或译作《康派涅拉》，是弗朗茨·李斯特创作的《帕格尼尼大练习曲》6首中第3首的钢琴独奏曲。</p><!--end.bg-blue--><hr><p>或者你可以走得更远：</p><p>为了提高平台兼容性（并保存一个按键），也可以使用#（这是一个合法的超链接目标），而不是&lt;&gt;：</p><!---your comment goes hereand here--><p>  参考：<a href="https://stackoverflow.com/questions/4823468/comments-in-markdown" target="_blank" rel="noopener">https://stackoverflow.com/questions/4823468/comments-in-markdown</a><br>  参考：<a href="https://github.com/fan2/Markdown/blob/master/Markdown%20Syntax.md" target="_blank" rel="noopener">https://github.com/fan2/Markdown/blob/master/Markdown%20Syntax.md</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#MarkDown注释，隐藏文字&lt;br&gt;1&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;!--.bg-blue--&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;弗朗茨·李斯特（Franz Liszt，1811年10月22日－1886年7月31日），著名匈牙利作曲家、钢琴家、指挥家，是&lt;str
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://seachal.me/uncategorized/2018/10/21/Java/2018-06-21/"/>
    <id>https://seachal.me/uncategorized/2018/10/21/Java/2018-06-21/</id>
    <published>2018-10-21T07:09:54.499Z</published>
    <updated>2018-10-21T07:09:54.500Z</updated>
    
    <content type="html"><![CDATA[<p># </p><p>//    @Override<br>//    @DataSource(“busi”)<br>//    @Transactional(readOnly = true, propagation = Propagation.REQUIRED, rollbackFor = Exception.class)<br>//    public OperateResult intelligentIdentification(MultipartFile file) {<br>////        UploadActionBean result = new UploadActionBean();<br>//        List<cigaretteinfo> cigaretteInfoList = new ArrayList&lt;&gt;() ;<br>//<br>////                    模式的识别结果数据<br>//                    JSONArray jsonArray = new JSONArray();<br>//                    JSONObject jsonObject = new JSONObject();<br>//                    jsonObject.put(“barCode”, “6901028001687”);<br>//                    jsonObject.put(“ratio”, “99.5”);<br>//                    jsonArray.add(jsonObject);<br>//                    jsonObject = new JSONObject();<br>//                    jsonObject.put(“barCode”, “6901028081474”);<br>//                    jsonObject.put(“ratio”, “49.5”);<br>//                    jsonArray.add(jsonObject);<br>//                    //   图片识别结果返回一个list的请求结果<br>////                   如果请求成功， 并且，返回的list不为null，size大于0<br>//                    if (true) {<br>//                        cigaretteInfoList = cigaretteInfoMapper.getCigaretteList(jsonArray);<br>////                      从数据库中查出的数据对象，<br>//                        for (int i = 0; cigaretteInfoList != null &amp;&amp; i &lt; cigaretteInfoList.size(); i++) {<br>//<br>//                            for (int j = 0; j &lt; jsonArray.size(); j++) {<br>//                               if (cigaretteInfoList.get(i).getBarBoxBarCode().equals(jsonArray.getJSONObject(j).getString(“barCode”))){<br>//<br>//                                   cigaretteInfoList.get(i).setRatio(jsonArray.getJSONObject(j).getString(“ratio”));<br>//                               }<br>//                            }<br>//                        }<br>//                    }<br>//        return OperateResultCode.SUCCESS.getResult().setDataList(cigaretteInfoList);<br>//    }</cigaretteinfo></p><pre><code>@Override@DataSource(&quot;busi&quot;)@Transactional(readOnly = true, propagation = Propagation.REQUIRED, rollbackFor = Exception.class)public OperateResult intelligentIdentification(MultipartFile file) {</code></pre><p>//        UploadActionBean result = new UploadActionBean();<br>        List<cigaretteinfo> cigaretteInfoList = new ArrayList&lt;&gt;() ;</cigaretteinfo></p><p>//                    模式的识别结果数据<br>                    JSONArray jsonArray = new JSONArray();<br>                    JSONObject jsonObject = new JSONObject();<br>                    jsonObject.put(“barCode”, “6901028001687”);<br>                    jsonObject.put(“ratio”, “99.5”);<br>                    jsonArray.add(jsonObject);<br>                    jsonObject = new JSONObject();<br>                    jsonObject.put(“barCode”, “6901028081474”);<br>                    jsonObject.put(“ratio”, “49.5”);<br>                    jsonArray.add(jsonObject);<br>                    //   图片识别结果返回一个list的请求结果<br>//                   如果请求成功， 并且，返回的list不为null，size大于0<br>                    if (true) {<br>//                      从数据库中查出的数据对象，<br>                        cigaretteInfoList = cigaretteInfoMapper.getCigaretteList(jsonArray);</p><pre><code>                    Map&lt;String, CigaretteInfo&gt; mapCigarette = new HashMap&lt;String, CigaretteInfo&gt;();                      for (CigaretteInfo cigaretteInfo : cigaretteInfoList) {                          mapCigarette.put(cigaretteInfo.getBarBoxBarCode(), cigaretteInfo);                      }                           for (int j = 0; j &lt; jsonArray.size(); j++) {                           if (mapCigarette.get(jsonArray.getJSONObject(j).getString(&quot;barCode&quot;)).getBarBoxBarCode().equals(jsonArray.getJSONObject(j).getString(&quot;barCode&quot;))){                                  mapCigarette.get(jsonArray.getJSONObject(j).getString(&quot;barCode&quot;)).setRatio(jsonArray.getJSONObject(j).getString(&quot;ratio&quot;));                           }                        }                }    return OperateResultCode.SUCCESS.getResult().setDataList(cigaretteInfoList);}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;# &lt;/p&gt;
&lt;p&gt;//    @Override&lt;br&gt;//    @DataSource(“busi”)&lt;br&gt;//    @Transactional(readOnly = true, propagation = Propagation.REQUIRED, rollb
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://seachal.me/uncategorized/2018/10/21/Java/2018-03-12/"/>
    <id>https://seachal.me/uncategorized/2018/10/21/Java/2018-03-12/</id>
    <published>2018-10-21T07:09:54.499Z</published>
    <updated>2018-10-21T07:09:54.499Z</updated>
    
    <content type="html"><![CDATA[<p># </p><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><p><img src="images/15208242696532.jpg" alt=""><br>there is no default  constructor available in BaseAdapter<br>父类中没有可用的默认构造函数。<br>这种情况下就需要显示的调用父类的构造方法， 毕竟有父类才有子类，通过父类的构造方法才能构造子类。<br>因为</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">BrandCountryRegionAdapter</span><span class="params">(Context context, <span class="keyword">int</span> layoutId, List&lt;ReportProductArea&gt; datas)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">super</span>();</span><br><span class="line">       <span class="keyword">int</span> i = <span class="number">1</span>；</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>和</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">BrandCountryRegionAdapter</span><span class="params">(Context context, <span class="keyword">int</span> layoutId, List&lt;ReportProductArea&gt; datas)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> i = <span class="number">1</span>；</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>的内容是一样的，第二种写法是第一种的简写。</p><p> <em>修正写法</em></p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">BrandCountryRegionAdapter</span><span class="params">(Context context, <span class="keyword">int</span> layoutId, List&lt;ReportProductArea&gt; datas)</span> </span>&#123;</span><br><span class="line">+    <span class="keyword">super</span>(context, layoutId, datas);</span><br><span class="line">       <span class="keyword">int</span> i = <span class="number">1</span>；</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>参考:<br><a href="http://blog.csdn.net/ozuijiaoweiyang/article/details/50477898" target="_blank" rel="noopener">http://blog.csdn.net/ozuijiaoweiyang/article/details/50477898</a></p><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><p><img src="images/15209044883931.jpg" alt=""><br>attempting  to use incompatible return type.<br>尝试使用不兼容的返回类型。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;# &lt;/p&gt;
&lt;h2 id=&quot;1&quot;&gt;&lt;a href=&quot;#1&quot; class=&quot;headerlink&quot; title=&quot;1&quot;&gt;&lt;/a&gt;1&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;images/15208242696532.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;there is no defa
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://seachal.me/uncategorized/2018/10/21/BlogBuild/%E5%B8%B8%E7%94%A8%E5%8D%9A%E5%AE%A2Metaweblog%20Api%E5%9C%B0%E5%9D%80/"/>
    <id>https://seachal.me/uncategorized/2018/10/21/BlogBuild/常用博客Metaweblog Api地址/</id>
    <published>2018-10-21T07:09:54.499Z</published>
    <updated>2018-10-21T07:09:54.499Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常用博客Metaweblog-Api地址"><a href="#常用博客Metaweblog-Api地址" class="headerlink" title="常用博客Metaweblog Api地址"></a>常用博客Metaweblog Api地址</h1><ul><li>CSDN： <a href="http://write.blog.csdn.net/xmlrpc/index" target="_blank" rel="noopener">http://write.blog.csdn.net/xmlrpc/index</a></li><li><p>博客园（cnblogs)：<a href="http://www.cnblogs.com/Blog%E5%90%8D/services/metaweblog.aspx" target="_blank" rel="noopener">http://www.cnblogs.com/Blog名(你的用户名)/services/metaweblog.aspx</a>。其中 Blog 名 请换为您的博客名。cnblogs 的博客<a href="https://i.cnblogs.com/Configure.aspx" target="_blank" rel="noopener">后台设置</a>，拉到最下面，也可以找到这个网址。比如说我的是 <a href="http://rpc.cnblogs.com/metaweblog/Seachal" target="_blank" rel="noopener">http://rpc.cnblogs.com/metaweblog/Seachal</a> 两者网址不同，但是效果一样。</p></li><li><p>开源中国（oschina)：<a href="https://my.oschina.net/action/xmlrpc" target="_blank" rel="noopener">https://my.oschina.net/action/xmlrpc</a></p></li><li>51cto：<a href="http://imguowei.blog.51cto.com/xmlrpc.php" target="_blank" rel="noopener">http://imguowei.blog.51cto.com/xmlrpc.php</a></li><li>网易（163）：<a href="http://os.blog.163.com/word/" target="_blank" rel="noopener">http://os.blog.163.com/word/</a></li><li>typecho 博客：<a href="http://xx.com/action/xmlrpc" target="_blank" rel="noopener">http://xx.com/action/xmlrpc</a>，其中 xx.com 为你的博客网址。如果 typecho 还没有进行 url rewrite，则为 <a href="http://xx.com/index.php/action/xmlrpc" target="_blank" rel="noopener">http://xx.com/index.php/action/xmlrpc</a></li><li>新浪博客： <a href="http://upload.move.blog.sina.com.cn/blog_rebuild/blog/xmlrpc.php" target="_blank" rel="noopener">http://upload.move.blog.sina.com.cn/blog_rebuild/blog/xmlrpc.php</a> <strong>新浪博客的 API 已关闭了</strong></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;常用博客Metaweblog-Api地址&quot;&gt;&lt;a href=&quot;#常用博客Metaweblog-Api地址&quot; class=&quot;headerlink&quot; title=&quot;常用博客Metaweblog Api地址&quot;&gt;&lt;/a&gt;常用博客Metaweblog Api地址&lt;/h1&gt;&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://seachal.me/uncategorized/2018/10/21/Android/Library/%E5%9B%BE%E8%A1%A8%E5%BC%80%E6%BA%90%E5%BA%93MPAndroidChart/"/>
    <id>https://seachal.me/uncategorized/2018/10/21/Android/Library/图表开源库MPAndroidChart/</id>
    <published>2018-10-21T07:09:54.463Z</published>
    <updated>2018-10-21T07:09:54.463Z</updated>
    
    <content type="html"><![CDATA[<h1 id="图表开源库MPAndroidChart的使用"><a href="#图表开源库MPAndroidChart的使用" class="headerlink" title="图表开源库MPAndroidChart的使用"></a>图表开源库MPAndroidChart的使用</h1><p>  使用版本3.0.3</p><h2 id="chart-的一些使用规则"><a href="#chart-的一些使用规则" class="headerlink" title="chart 的一些使用规则"></a>chart 的一些使用规则</h2><p>  一个 linechart 需要两个ArrayList，其他chart 也类似。</p><p>  ArrayList<x> xList,<br>  ArrayList<y> yList;<br>  xList he  yList的size相等。<br>  （i,x）与 （i,y）基于i相交于一点才会绘制在 view中。</y></x></p><h2 id="1-lineChart"><a href="#1-lineChart" class="headerlink" title="1.lineChart"></a>1.lineChart</h2><ul><li>1.1</li></ul><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//        关于图表的描述</span></span><br><span class="line">        <span class="keyword">int</span> textColor = ContextCompat.getColor(mActivity, R.color.stage_text);</span><br><span class="line">        <span class="keyword">Description</span> <span class="keyword">description</span> = <span class="keyword">new</span> <span class="keyword">Description</span>();</span><br><span class="line">        <span class="keyword">description</span>.setText(<span class="string">"周"</span>);</span><br><span class="line">        <span class="keyword">description</span>.setTextColor(textColor);</span><br><span class="line">        <span class="keyword">description</span>.setTextSize(<span class="number">12</span>);</span><br><span class="line">        <span class="keyword">description</span>.setXOffset(<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">description</span>.setYOffset(-<span class="number">15</span>);<span class="comment">// 相对于Y位置偏移量</span></span><br><span class="line">        mChart.setDescription(<span class="keyword">description</span>); <span class="comment">//图表默认右下方的描述，</span></span><br></pre></td></tr></table></figure><p>  <img src="media/15268910065668.jpg" alt=""></p><ul><li>1.2 </li></ul><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">//</span>图例设置    图例（声明颜色line， 颜色bar代表什么数据，  如红色代表订购率 ）</span><br><span class="line">Legend legend = mChart.getLegend<span class="params">()</span>;</span><br><span class="line">legend.<span class="keyword">set</span>HorizontalAlignment<span class="params">(Legend.LegendHorizontalAlignment.RIGHT)</span>;<span class="string">//</span>设置图例水平对齐,   居右侧</span><br><span class="line">legend.<span class="keyword">set</span>VerticalAlignment<span class="params">(Legend.LegendVerticalAlignment.TOP)</span>;<span class="string">//</span> 居上侧</span><br><span class="line">legend.<span class="keyword">set</span>Orientation<span class="params">(Legend.LegendOrientation.HORIZONTAL)</span>;<span class="string">//</span> 水平</span><br><span class="line">legend.<span class="keyword">set</span>DrawInside<span class="params">(true)</span>;  <span class="string">//</span></span><br><span class="line">legend.<span class="keyword">set</span>Direction<span class="params">(Legend.LegendDirection.LEFT_TO_RIGHT)</span>;<span class="string">//</span> 颜色在左  文字在右</span><br><span class="line">legend.<span class="keyword">set</span>Form<span class="params">(Legend.LegendForm.LINE)</span>;<span class="string">////</span>设置图例形状， SQUARE<span class="params">(方格)</span> CIRCLE（圆形） LINE（线性）</span><br><span class="line">legend.<span class="keyword">set</span>TextSize<span class="params">(12f)</span>;</span><br><span class="line">legend.<span class="keyword">set</span>Enabled<span class="params">(true)</span>;</span><br></pre></td></tr></table></figure><p><img src="media/15268908222735.jpg" alt=""></p><ul><li>1.3  y轴</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//y轴设置  左侧</span></span><br><span class="line">      YAxis leftAxis = mChart.getAxisLeft();</span><br><span class="line">      leftAxis.setPosition(YAxis.YAxisLabelPosition.OUTSIDE_CHART);<span class="comment">//设置y-labels显示的位置</span></span><br><span class="line">      leftAxis.setDrawGridLines(<span class="literal">true</span>);<span class="comment">//绘制y网格线</span></span><br><span class="line">      leftAxis.enableGridDashedLine(<span class="number">4f</span>, <span class="number">2f</span>, <span class="number">0f</span>);<span class="comment">//启用网格虚线</span></span><br><span class="line">      leftAxis.setTextColor(barColor);<span class="comment">//label字体颜色</span></span><br><span class="line">      leftAxis.setTextSize(<span class="number">11</span>);<span class="comment">//label字体大小</span></span><br><span class="line">      leftAxis.setLabelCount(Y_LABEL_COUNT, <span class="literal">false</span>);<span class="comment">//y label显示的数量</span></span><br><span class="line">      leftAxis.setDrawLabels(<span class="literal">true</span>);<span class="comment">//折线上显示值，则不显示坐标轴上的值</span></span><br><span class="line">      leftAxis.setAxisMinimum(<span class="number">0f</span>);</span><br><span class="line">      IAxisValueFormatter leftFormaterr = <span class="built_in">new</span> MyLeftYAxisValueFormatter();</span><br><span class="line">      leftAxis.setValueFormatter(leftFormaterr);</span><br></pre></td></tr></table></figure><ul><li><p>IAxisValueFormatter 格式话坐标的显示方式<br>例如给y轴的所有刻度值后面都加上 ”条“、”%“<br><img src="media/15268907184995.jpg" alt=""></p></li><li><p>1.4  绘制line或者bar等等</p></li></ul><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">ArrayList&lt;ILineDataSet&gt; dataSets = new ArrayList&lt;&gt;();</span><br><span class="line">      <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; entriesList.size(); ++i) &#123;</span><br><span class="line">          LineDataSet <span class="keyword">set</span> = new <span class="comment">LineDataSet(entriesList.get(i), titles[i])</span>;</span><br><span class="line">          <span class="keyword">if</span> (lineColors != null) &#123;</span><br><span class="line">              <span class="keyword">set</span>.setColor(lineColors[i]);</span><br><span class="line">              <span class="keyword">set</span>.setCircleColor(lineColors[i]);</span><br><span class="line">              <span class="keyword">set</span>.setCircleColorHole(Color.WHITE);</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              <span class="keyword">set</span>.setColor(LINE_COLORS[i <span class="comment">% 3])</span>;</span><br><span class="line">              <span class="keyword">set</span>.setCircleColor(LINE_COLORS[i <span class="comment">% 3])</span>;</span><br><span class="line">              <span class="keyword">set</span>.setCircleColorHole(Color.WHITE);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">set</span>.setCircleRadius(2.0f);<span class="comment">//折线上圆点的大小。</span></span><br><span class="line">          <span class="keyword">set</span>.setMode(LineDataSet.Mode.HORIZONTAL_BEZIER);<span class="comment">//设置折线图样式  圆滑曲线  平滑曲线 或者 折线</span></span><br><span class="line">          <span class="keyword">set</span>.setLineWidth(1.5f);<span class="comment">//线的宽度（线的粗度）</span></span><br><span class="line">          <span class="keyword">set</span>.setDrawCircles(true);<span class="comment">//禁止显示数据坐标圆点</span></span><br><span class="line">          <span class="comment">//设置显示/不显示 在坐标点上方显示坐标值。</span></span><br><span class="line">          <span class="keyword">set</span>.setDrawValues(false);  <span class="comment">//Enables / disables drawing values (value-text) for all DataSets this data object contains.</span></span><br><span class="line">          <span class="keyword">set</span>.setAxisDependency(YAxis.AxisDependency.RIGHT);<span class="comment">// 数值属于右侧Y轴</span></span><br><span class="line">          setRightAxisMaximum(deliveryLevelTrend);</span><br><span class="line">          dataSets.add(<span class="keyword">set</span>);</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p><img src="media/15268920945142.jpg" alt=""></p><h2 id="2-barChart"><a href="#2-barChart" class="headerlink" title="2.barChart"></a>2.barChart</h2><h2 id="3-CombinedChart"><a href="#3-CombinedChart" class="headerlink" title="3.CombinedChart"></a>3.CombinedChart</h2><h3 id="3-1"><a href="#3-1" class="headerlink" title="3.1"></a>3.1</h3><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">CombinedData</span> <span class="class"><span class="keyword">data</span> = new <span class="type">CombinedData</span>();</span></span><br><span class="line"></span><br><span class="line">   <span class="class"><span class="keyword">data</span>.setData(<span class="title">generateLineData</span>());</span></span><br><span class="line">   <span class="class"><span class="keyword">data</span>.setData(<span class="title">generateBarData</span>());</span></span><br><span class="line">   <span class="class"><span class="keyword">data</span>.setData(<span class="title">generateBubbleData</span>());</span></span><br><span class="line">   <span class="class"><span class="keyword">data</span>.setData(<span class="title">generateScatterData</span>());</span></span><br><span class="line">   <span class="class"><span class="keyword">data</span>.setData(<span class="title">generateCandleData</span>());</span></span><br><span class="line">   <span class="class"><span class="keyword">data</span>.setValueTypeface(<span class="title">mTfLight</span>);</span></span><br><span class="line"></span><br><span class="line">   xAxis.setAxisMaximum(<span class="class"><span class="keyword">data</span>.getXMax() + 0.25f);</span></span><br><span class="line"></span><br><span class="line">   mChart.setData(<span class="class"><span class="keyword">data</span>);</span></span><br><span class="line">   mChart.invalidate();</span><br></pre></td></tr></table></figure><p>所有数据都必须set到一个 CombinedData中去，不然是会报错的。<br>也很好立即， CombinedChart就是把所有的图表整合为一个。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;图表开源库MPAndroidChart的使用&quot;&gt;&lt;a href=&quot;#图表开源库MPAndroidChart的使用&quot; class=&quot;headerlink&quot; title=&quot;图表开源库MPAndroidChart的使用&quot;&gt;&lt;/a&gt;图表开源库MPAndroidChart的
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://seachal.me/uncategorized/2018/10/21/Android/Library/pictureSelector/"/>
    <id>https://seachal.me/uncategorized/2018/10/21/Android/Library/pictureSelector/</id>
    <published>2018-10-21T07:09:54.463Z</published>
    <updated>2018-10-21T07:09:54.463Z</updated>
    
    <content type="html"><![CDATA[<p># </p><h3 id="pictureSelector-选择图片的开源库"><a href="#pictureSelector-选择图片的开源库" class="headerlink" title="pictureSelector 选择图片的开源库"></a>pictureSelector 选择图片的开源库</h3><h4 id="测试从A页面到-选择图片页面（B），点击B上的按钮后B-回到到A的过程中，-B大约需要1S的时间关闭的原因是什么。A-通过-StartActivityforresult-启动，-B关闭后回到A"><a href="#测试从A页面到-选择图片页面（B），点击B上的按钮后B-回到到A的过程中，-B大约需要1S的时间关闭的原因是什么。A-通过-StartActivityforresult-启动，-B关闭后回到A" class="headerlink" title="测试从A页面到 选择图片页面（B），点击B上的按钮后B 回到到A的过程中， B大约需要1S的时间关闭的原因是什么。A 通过 StartActivityforresult 启动， B关闭后回到A."></a>测试从A页面到 选择图片页面（B），点击B上的按钮后B 回到到A的过程中， B大约需要1S的时间关闭的原因是什么。A 通过 StartActivityforresult 启动， B关闭后回到A.</h4><h5 id="A页面使用了-BGA-zxing"><a href="#A页面使用了-BGA-zxing" class="headerlink" title="A页面使用了 BGA-zxing"></a>A页面使用了 BGA-zxing</h5><ul><li>B</li></ul><p>ok1     1527488490790</p><p>ok2     1527488490790</p><p><strong>ok3     1527488490811</strong>    B<br>activity关闭 会返回到A Activity。</p><ul><li>A  </li></ul><p>onCreate1527488485885</p><p>onStart  1527488485887</p><p>onResume 1527488486233</p><p>onStop1527488488353</p><p><strong>onStart  1527488490846</strong>  B关闭返回到A  可以看到B 关闭回到A耗时非常短（ok2 和本onstart的差值 ），其实</p><p><strong>onResume 1527488491218</strong></p><p>onStop   1527488494359</p><p>onDestroy1527488494359</p><h5 id="A2是一个简单页面"><a href="#A2是一个简单页面" class="headerlink" title="A2是一个简单页面"></a>A2是一个简单页面</h5><ul><li>B Activity</li></ul><p>ok1 1527489826242</p><p>ok2 1527489826242</p><p><strong>ok3 1527489826278</strong></p><ul><li><p>A2 Activity</p><p>onCreate  1527489817153<br>  onStart1527489817156<br> onResume1527489817157<br>   onStop1527489820219</p><p> <strong>onStart 1527489826319</strong></p><p><strong>onResume 1527489826319</strong></p><pre><code>onStop1527489886202</code></pre></li></ul><h4 id="得出结论，-相较于A2，A页面使用了Zxing，zxing比较耗时。所以，耗时发生在-A页面再次-onResume，"><a href="#得出结论，-相较于A2，A页面使用了Zxing，zxing比较耗时。所以，耗时发生在-A页面再次-onResume，" class="headerlink" title="得出结论， 相较于A2，A页面使用了Zxing，zxing比较耗时。所以，耗时发生在 A页面再次 onResume，"></a>得出结论， 相较于A2，A页面使用了Zxing，zxing比较耗时。所以，耗时发生在 A页面再次 onResume，</h4><ul><li>BGAQRCode 中，onStart到onResume速度特别快。<br>BGAQRCode使用的事自己图片选择。<br>onCreate1527492375031<br>onStart1527492375434<br>onResume1527492375434</li></ul><p>onStop   1527492380028<br>onStart  1527492381807<br>onResume 1527492381807</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;# &lt;/p&gt;
&lt;h3 id=&quot;pictureSelector-选择图片的开源库&quot;&gt;&lt;a href=&quot;#pictureSelector-选择图片的开源库&quot; class=&quot;headerlink&quot; title=&quot;pictureSelector 选择图片的开源库&quot;&gt;&lt;/a&gt;pict
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://seachal.me/uncategorized/2018/10/21/Android/Library/2018-05-28/"/>
    <id>https://seachal.me/uncategorized/2018/10/21/Android/Library/2018-05-28/</id>
    <published>2018-10-21T07:09:54.455Z</published>
    <updated>2018-10-21T07:09:54.455Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Android开发在onResume中执行耗时操作导致从其他界面返回特别慢"><a href="#Android开发在onResume中执行耗时操作导致从其他界面返回特别慢" class="headerlink" title="Android开发在onResume中执行耗时操作导致从其他界面返回特别慢"></a>Android开发在onResume中执行耗时操作导致从其他界面返回特别慢</h1><blockquote><p>以pictureSelector 为基础，做的验证试验。</p></blockquote><p>今天改别人的一个bug时遇见一个问题，发现某个界面点击返回以后特别慢，得等一会儿才能返回到上一个界面。</p><p>当时第一反应可能是在点击返回的时候或者是在Activity的onDestroy里面做了很多耗时的操作导致点击返回的时候出现特别慢的问题，但是仔细查看了一下代码发现在返回按钮的监听或者是设备返回键的监听都没有做什么操作，onDestroy里同样没做什么操作，这就奇怪了问题到底出在哪里呢？</p><p>经过一番查找调试分析，觉得问题可能不是出在当前界面，将视线转到要返回的上一个界面，发现重写了onResume方法，可能是这个方法执行了耗时的操作导致的，打印了一下这个方法的耗时时间发现耗时也不是很高啊还不到10ms，难道问题的关键不是在这里？</p><p>为了验证我的想法我自己写了个demo，在AActivity的onResume里执行Thread.sleep(10000)睡眠10秒，跳转到BActivity然后点击返回。果然，当点击返回的时候会B会停5秒左右关闭，然后黑屏5秒左右才会回到AActivity。代码如下</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">          Thread.sleep(<span class="number">10000</span>);</span><br><span class="line">          Log.i(TAG, <span class="string">"Resume1000"</span>+System.currentTimeMillis());</span><br><span class="line">      &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">          e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">super</span>.onResume();</span><br><span class="line">      Log.i(TAG, <span class="string">"onResume"</span>+System.currentTimeMillis());</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>通过demo说明问题很有可能是出在onResume里面，再仔细看了看onResume里的代码，发现在onResume里执行了handler.sendMessage发送消息，会不会是在handler里面执行的代码耗时里，调试一下发现果然是这里面的代码出现了耗时的操作。</p><p>找到问题所在了就好办了，将这段耗时的操作提取到线程里执行，执行完后再使用handler通知UI刷新界面，ok重新运行程序，测试一下，点击返回很流畅，搞定。</p><p>记录一下免得自己以后也在开发中犯同样的错误。</p><h3 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h3><p>页面优化  页面速度</p><h3 id="写这个例子是，遇到的自己掌握不牢固的问题。"><a href="#写这个例子是，遇到的自己掌握不牢固的问题。" class="headerlink" title="写这个例子是，遇到的自己掌握不牢固的问题。"></a>写这个例子是，遇到的自己掌握不牢固的问题。</h3><p>  1.Thread </p><pre><code>1.1 错误的演示代码：</code></pre><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"> <span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line"></span><br><span class="line">         <span class="meta">@Override</span></span><br><span class="line">         <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">             <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">             <span class="keyword">try</span> &#123;</span><br><span class="line">                 Thread.sleep(<span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line">             &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                 <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">                 e.printStackTrace();</span><br><span class="line">             &#125;</span><br><span class="line">             resume();</span><br><span class="line">             Log.i(TAG, <span class="string">"Resume3000"</span>+System.currentTimeMillis());</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;).start();</span><br><span class="line">     Log.i(TAG, <span class="string">"onResume"</span>+System.currentTimeMillis());</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span> <span class="function"><span class="keyword">void</span>  <span class="title">resume</span><span class="params">()</span></span>&#123;</span><br><span class="line">     <span class="keyword">super</span>.onResume();</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p><img src="media/15275177563439.jpg" alt=""></p><p>   1.2<br>   代码</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Log.i(TAG, <span class="string">"Resume3000"</span>+System.currentTimeMillis());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).start();</span><br><span class="line">    <span class="keyword">super</span>.onResume();</span><br><span class="line">    Log.i(TAG, <span class="string">"onResume"</span>+System.currentTimeMillis());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">I/SimpleViewActivity: onResume15<span class="number">27517858625</span></span><br><span class="line">I/SimpleViewActivity: Resume300015<span class="number">27517861619</span></span><br></pre></td></tr></table></figure><p>结论：<br>  new Thread 创建了新的线程， （是异步的了？），所以，线程内的代码执行的比线程代码下面的代码晚。<br>  <a href="http://itindex.net/detail/54784-android-%E7%BA%BF%E7%A8%8B-%E5%A4%A7%E5%9D%91" target="_blank" rel="noopener">http://itindex.net/detail/54784-android-%E7%BA%BF%E7%A8%8B-%E5%A4%A7%E5%9D%91</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Android开发在onResume中执行耗时操作导致从其他界面返回特别慢&quot;&gt;&lt;a href=&quot;#Android开发在onResume中执行耗时操作导致从其他界面返回特别慢&quot; class=&quot;headerlink&quot; title=&quot;Android开发在onResume
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://seachal.me/uncategorized/2018/10/21/Android/Library/BGAQRCode/"/>
    <id>https://seachal.me/uncategorized/2018/10/21/Android/Library/BGAQRCode/</id>
    <published>2018-10-21T07:09:54.455Z</published>
    <updated>2018-10-21T07:09:54.455Z</updated>
    
    <content type="html"><![CDATA[<p>#<br><img src="media/15281008537668.jpg" alt=""></p><ol><li>QRCodeView 是抽象类， 这样ZxingView，ZbarView就可以更好的根据自己的特性进行拓展，</li><li>ScanBoxView  是真正的扫描框<br><img src="media/15281010093593.jpg" alt=""></li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;cn.bingoogolapple.qrcode.zxing.ZXingView</span><br><span class="line">        android:<span class="attribute">id</span>=<span class="string">"@+id/zxingview"</span></span><br><span class="line">        <span class="attribute">style</span>=<span class="string">"@style/MatchMatch"</span></span><br><span class="line">        app:<span class="attribute">qrcv_animTime</span>=<span class="string">"1000"</span></span><br><span class="line">        app:<span class="attribute">qrcv_barCodeTipText</span>=<span class="string">"将条码放入框内，即可自动扫描"</span></span><br><span class="line">        app:<span class="attribute">qrcv_barcodeRectHeight</span>=<span class="string">"120dp"</span></span><br><span class="line">        app:<span class="attribute">qrcv_borderColor</span>=<span class="string">"@android:color/white"</span></span><br><span class="line">        app:<span class="attribute">qrcv_borderSize</span>=<span class="string">"1dp"</span></span><br><span class="line">        app:<span class="attribute">qrcv_cornerColor</span>=<span class="string">"@color/colorPrimaryDark"</span></span><br><span class="line">        app:<span class="attribute">qrcv_cornerLength</span>=<span class="string">"20dp"</span></span><br><span class="line">        app:<span class="attribute">qrcv_cornerSize</span>=<span class="string">"3dp"</span></span><br><span class="line">        app:<span class="attribute">qrcv_customScanLineDrawable</span>=<span class="string">"@drawable/scan_icon_scanline"</span></span><br><span class="line">        app:<span class="attribute">qrcv_isBarcode</span>=<span class="string">"false"</span></span><br><span class="line">        app:<span class="attribute">qrcv_isCenterVertical</span>=<span class="string">"false"</span></span><br><span class="line">        app:<span class="attribute">qrcv_isOnlyDecodeScanBoxArea</span>=<span class="string">"false"</span></span><br><span class="line">        app:<span class="attribute">qrcv_isScanLineReverse</span>=<span class="string">"true"</span></span><br><span class="line">        app:<span class="attribute">qrcv_isShowDefaultGridScanLineDrawable</span>=<span class="string">"false"</span></span><br><span class="line">        app:<span class="attribute">qrcv_isShowDefaultScanLineDrawable</span>=<span class="string">"true"</span></span><br><span class="line">        app:<span class="attribute">qrcv_isShowTipBackground</span>=<span class="string">"true"</span></span><br><span class="line">        app:<span class="attribute">qrcv_isShowTipTextAsSingleLine</span>=<span class="string">"false"</span></span><br><span class="line">        app:<span class="attribute">qrcv_isTipTextBelowRect</span>=<span class="string">"false"</span></span><br><span class="line">        app:<span class="attribute">qrcv_maskColor</span>=<span class="string">"#33FFFFFF"</span></span><br><span class="line">        app:<span class="attribute">qrcv_qrCodeTipText</span>=<span class="string">"将二维码/条码放入框内，即可自动扫描"</span></span><br><span class="line">        app:<span class="attribute">qrcv_rectWidth</span>=<span class="string">"200dp"</span></span><br><span class="line">        app:<span class="attribute">qrcv_scanLineColor</span>=<span class="string">"@color/colorPrimaryDark"</span></span><br><span class="line">        app:<span class="attribute">qrcv_scanLineMargin</span>=<span class="string">"0dp"</span></span><br><span class="line">        app:<span class="attribute">qrcv_scanLineSize</span>=<span class="string">"0.5dp"</span></span><br><span class="line">        app:<span class="attribute">qrcv_tipTextColor</span>=<span class="string">"@android:color/white"</span></span><br><span class="line">        app:<span class="attribute">qrcv_tipTextSize</span>=<span class="string">"12sp"</span></span><br><span class="line">        app:<span class="attribute">qrcv_toolbarHeight</span>=<span class="string">"56dp"</span></span><br><span class="line">        app:<span class="attribute">qrcv_topOffset</span>=<span class="string">"20dp"</span>/&gt;</span><br></pre></td></tr></table></figure><p>在xml中的很多参数是借ZXingView（QRCodeView）传给了ScanBoxView。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#&lt;br&gt;&lt;img src=&quot;media/15281008537668.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;QRCodeView 是抽象类， 这样ZxingView，ZbarView就可以更好的根据自己的特性进行拓展，&lt;/li&gt;
&lt;li&gt;ScanBoxVie
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://seachal.me/uncategorized/2018/10/21/Android/2018-04-18-%E9%9A%90%E8%97%8F%E6%A0%87%E9%A2%98%E6%A0%8F%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://seachal.me/uncategorized/2018/10/21/Android/2018-04-18-隐藏标题栏的问题/</id>
    <published>2018-10-21T07:09:54.454Z</published>
    <updated>2018-10-21T07:09:54.454Z</updated>
    
    <content type="html"><![CDATA[<h2 id="隐藏标题栏的问题："><a href="#隐藏标题栏的问题：" class="headerlink" title="隐藏标题栏的问题："></a>隐藏标题栏的问题：</h2><p>继承了AppCompatActivity的Activity无法通过调用requestWindowFeature(Window.FEATURE_NO_TITLE)来隐藏标题栏。</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;   </span><br><span class="line">      <span class="meta">@Override</span>    </span><br><span class="line">      <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;        </span><br><span class="line">            <span class="keyword">super</span>.onCreate(savedInstanceState);        </span><br><span class="line">            requestWindowFeature(<span class="type">Window</span>.<span class="type">FEATURE_NO_TITLE</span>); <span class="comment">//无效   </span></span><br><span class="line">            setContentView(<span class="type">R</span>.layout.activity_main);   </span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>既然这条路走不通，我就在AndroidManifest.xml将主题改为<strong>@android:style/Theme.NoTitleBar</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;application    </span><br><span class="line">   android:<span class="attribute">icon</span>=<span class="string">"@mipmap/ic_launcher"</span>    </span><br><span class="line">   android:<span class="attribute">label</span>=<span class="string">"@string/app_name"</span>    </span><br><span class="line">   android:<span class="attribute">theme</span>=<span class="string">"@android:style/Theme.NoTitleBar"</span>//运行出错</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>在Android Monitor中看到错误报告：You need to use a Theme.AppCompat theme (or descendant) with this activity.（你必须使用Theme.AppCompat主题或者其子类主题）</p><h2 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h2><p>在AndroidManifest.xml中将主题更改为Theme.AppCompat.Light.NoActionBar、Theme.AppCompat.NoActionBar或Theme.AppCompat.DayNight.NoActionBar中的一个，即可隐藏标题栏</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;application    </span><br><span class="line">   android:<span class="attribute">icon</span>=<span class="string">"@mipmap/ic_launcher"</span>    </span><br><span class="line">   android:<span class="attribute">label</span>=<span class="string">"@string/app_name"</span>    </span><br><span class="line">   android:<span class="attribute">theme</span>=<span class="string">"@style/Theme.AppCompat.Light.NoActionBar"</span>//成功隐藏标题栏</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><p>在activity中设置也可以</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;activity</span><br><span class="line">        android:<span class="attribute">name</span>=<span class="string">".CameraActivity"</span></span><br><span class="line">        android:<span class="attribute">theme</span>=<span class="string">"@style/Theme.AppCompat.Light.NoActionBar"</span></span><br><span class="line">        android:<span class="attribute">configChanges</span>=<span class="string">"orientation|screenLayout|keyboardHidden"</span></span><br><span class="line">        android:<span class="attribute">hardwareAccelerated</span>=<span class="string">"true"</span></span><br><span class="line">        android:<span class="attribute">screenOrientation</span>=<span class="string">"portrait"</span>&gt;</span><br></pre></td></tr></table></figure><p>或者直接修改style.xml文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Base application theme. --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">"AppTheme"</span> <span class="attr">parent</span>=<span class="string">"Theme.AppCompat.Light.DarkActionBar"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!-- Customize your theme here. --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"colorPrimary"</span>&gt;</span>@color/colorPrimary<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"colorPrimaryDark"</span>&gt;</span>@color/colorPrimaryDark<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"colorAccent"</span>&gt;</span>@color/colorAccent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">"Theme.MainActivity"</span> <span class="attr">parent</span>=<span class="string">"AppTheme"</span>/&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">"Theme.PreviewActivity"</span> <span class="attr">parent</span>=<span class="string">"Theme.AppCompat.NoActionBar"</span>/&gt;</span><span class="undefined"></span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;activity android:<span class="built_in">name</span>=<span class="string">".PicturePreviewActivity"</span></span><br><span class="line"></span><br><span class="line">          /&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;隐藏标题栏的问题：&quot;&gt;&lt;a href=&quot;#隐藏标题栏的问题：&quot; class=&quot;headerlink&quot; title=&quot;隐藏标题栏的问题：&quot;&gt;&lt;/a&gt;隐藏标题栏的问题：&lt;/h2&gt;&lt;p&gt;继承了AppCompatActivity的Activity无法通过调用request
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://seachal.me/uncategorized/2018/10/21/Android/2018-03-21/"/>
    <id>https://seachal.me/uncategorized/2018/10/21/Android/2018-03-21/</id>
    <published>2018-10-21T07:09:54.454Z</published>
    <updated>2018-10-21T07:09:54.454Z</updated>
    
    <content type="html"><![CDATA[<h1 id="android-studio修改项目名-project-name"><a href="#android-studio修改项目名-project-name" class="headerlink" title="android studio修改项目名(project name)"></a>android studio修改项目名(project name)</h1><p>在使用Android studio 开发，想要修改我们的工程名或者包名，却感到无从下手该怎么办呢？</p><p>一般修改工程名都会： 选中工程右键 &gt; refactor &gt; rename 填好名字确定后被提示 ”can’t rename root module” 因为Android Studio只能修改根目录内的所有文件。</p><h2 id="修改Project工程名解决办法"><a href="#修改Project工程名解决办法" class="headerlink" title="修改Project工程名解决办法:"></a>修改Project工程名解决办法:</h2><ul><li><p>1.首先关闭Android studio，然后找到工程所在的文件夹，把工程文件夹重命名为想要的名字。<br>如图：<br><img src="images/20160922202343326." alt=""></p></li><li><p>2.用Android studio重新打开android_service这个工程。<br>如图：<br><img src="images/15216172535629.jpg" alt=""><br>改为<br><img src="images/15216173050327.jpg" alt=""></p></li></ul><p><strong>以下演示的都是，修改后的，</strong></p><ul><li>3.修改 .iml文件名为terminal-android-guizhou.iml 和这个文件里面的 </li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;module external<span class="selector-class">.linked</span><span class="selector-class">.project</span><span class="selector-class">.id</span>=<span class="string">"terminal-android-guizhou"</span></span><br></pre></td></tr></table></figure><p>如图：<br><img src="images/20160922202450968." alt="这里写图片描述"></p><p><img src="images/15216176485427.jpg" alt=""></p><ul><li><p>4 导入到Android Studio</p></li><li><p>5.目录.idea/modules.xml里面的fileurl导入工程时已经自动改正，可以查看一下。<br>如图：<br><img src="images/15216839278695.jpg" alt=""></p></li><li>6．Run一下工程Ok了！</li></ul><h2 id="修改Package包名解决办法"><a href="#修改Package包名解决办法" class="headerlink" title="修改Package包名解决办法:"></a>修改Package包名解决办法:</h2><p>在 Project工具栏点击这里<br><img src="images/20160922202838926." alt="这里写图片描述"></p><p>出现下图<br><img src="images/20160922202941016." alt="这里写图片描述"><br>将Compact Empty Middle前面的勾去掉，包的层级将会改变。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;android-studio修改项目名-project-name&quot;&gt;&lt;a href=&quot;#android-studio修改项目名-project-name&quot; class=&quot;headerlink&quot; title=&quot;android studio修改项目名(project 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://seachal.me/uncategorized/2018/10/21/Android/2018-04-18-1_Unable%20to%20merge%20dex/"/>
    <id>https://seachal.me/uncategorized/2018/10/21/Android/2018-04-18-1_Unable to merge dex/</id>
    <published>2018-10-21T07:09:54.454Z</published>
    <updated>2018-10-21T07:09:54.454Z</updated>
    
    <content type="html"><![CDATA[<h1 id="“Unable-to-merge-dex”问题解决"><a href="#“Unable-to-merge-dex”问题解决" class="headerlink" title="“Unable to merge dex”问题解决"></a>“Unable to merge dex”问题解决</h1><p>今天在引用一个库UCrop时，报错：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Error:Execution failed <span class="keyword">for</span> task <span class="string">':cameraphotoframe:transformDexArchiveWithExternalLibsDexMergerForDebug'</span>.</span><br><span class="line">&gt; java<span class="selector-class">.lang</span><span class="selector-class">.RuntimeException</span>: com<span class="selector-class">.android</span><span class="selector-class">.builder</span><span class="selector-class">.dexing</span><span class="selector-class">.DexArchiveMergerException</span>: Unable to merge dex</span><br><span class="line"></span><br><span class="line">翻译器：</span><br><span class="line">错误：执行失败的任务<span class="string">'：应用程序：转换Dex存档与外部库Dex合并调试'</span>。</span><br><span class="line">&gt; java<span class="selector-class">.lang</span><span class="selector-class">.Runtime</span>异常：java<span class="selector-class">.lang</span><span class="selector-class">.Runtime</span>异常：com<span class="selector-class">.android</span><span class="selector-class">.builder</span><span class="selector-class">.dexing</span><span class="selector-class">.Dex</span>归档合并异常：无法合并dex</span><br></pre></td></tr></table></figure><p>原因是引入了重复的lib导致的：<br>开始翻这个库的源码：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    <span class="keyword">implementation</span> <span class="string">'com.android.support:appcompat-v7:27.1.0'</span></span><br><span class="line">    <span class="keyword">implementation</span> <span class="string">'com.squareup.okhttp3:okhttp:3.8.1'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我的module</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">compile <span class="string">'com.github.yalantis:ucrop:2.2.2'</span></span><br><span class="line">    <span class="keyword">implementation</span> <span class="string">'com.android.support:appcompat-v7:26.1.0'</span></span><br></pre></td></tr></table></figure><p>然后删掉自己的的appcompat，重新编译，成功了！</p><p>当你遇到这样的错误时，一定要先检查你的build.gradle是不是有重复的包</p><p>参考：<a href="https://stackoverflow.com/questions/46267621/unable-to-merge-dex?page=1&amp;tab=votes#tab-top" target="_blank" rel="noopener">https://stackoverflow.com/questions/46267621/unable-to-merge-dex?page=1&amp;tab=votes#tab-top</a></p><h1 id="第二种情况"><a href="#第二种情况" class="headerlink" title="第二种情况"></a>第二种情况</h1><p>All com. Android. Support libraries must use the exact same version specification  (mixing versions can lead to runtime crashes). Found versions 27.1.0, 26.1.0. Examples include com. Android. Support: animated-vector-drawable:27.1.0 and com. Android. Support: design:26.1.0 more…  (8 F1)</p><p>This support library should not use a different version  (27) than the compileSdkVersion  (26) more..  (8 F1)</p><p>compileSdkVersion 与com.android.support:design:$supportLibVersion” 的版本不一致。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;“Unable-to-merge-dex”问题解决&quot;&gt;&lt;a href=&quot;#“Unable-to-merge-dex”问题解决&quot; class=&quot;headerlink&quot; title=&quot;“Unable to merge dex”问题解决&quot;&gt;&lt;/a&gt;“Unable to 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://seachal.me/uncategorized/2018/10/21/Android/2018-02-28/"/>
    <id>https://seachal.me/uncategorized/2018/10/21/Android/2018-02-28/</id>
    <published>2018-10-21T07:09:54.453Z</published>
    <updated>2018-10-21T07:09:54.454Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Android-Profiler分为三大模块：-cpu、内存-、网络。基本的使用在上一篇文章有讲到。这里详细说一下。"><a href="#Android-Profiler分为三大模块：-cpu、内存-、网络。基本的使用在上一篇文章有讲到。这里详细说一下。" class="headerlink" title="Android Profiler分为三大模块： cpu、内存 、网络。基本的使用在上一篇文章有讲到。这里详细说一下。"></a>Android Profiler分为三大模块： cpu、内存 、网络。基本的使用在上一篇文章有讲到。这里详细说一下。</h1><h2 id="一、-CPU分析器CPU-Profiler"><a href="#一、-CPU分析器CPU-Profiler" class="headerlink" title="一、 CPU分析器CPU Profiler"></a><strong>一、 CPU分析器CPU Profiler</strong></h2><p>CPU分析器可帮助您实时检查应用程序的CPU使用情况和线程活动，并记录方法跟踪，以便您可以优化和调试应用程序的代码。</p><p>要打开CPU Profiler，请按照下列步骤操作：</p><ul><li>点击 <code>View &gt; Tool Windows &gt; Android Profiler</code> (还可以点击工具栏的<img src="images/toolbar-android-profiler.png" alt="image">).</li><li>从Android Profiler工具栏中选择要配置的设备和应用程序进程(如果您已通过USB连接设备但未看到它，请确保已启用USB调试)</li><li>单击CPU时间轴中的任意位置打开CPU Profiler。</li></ul><h3 id="1-1-为什么要优化CPU的使用"><a href="#1-1-为什么要优化CPU的使用" class="headerlink" title="1.1 为什么要优化CPU的使用"></a><strong>1.1 为什么要优化CPU的使用</strong></h3><p>优化CPU使用率有许多优点，例如提供更快更流畅的用户体验，并保持设备电池寿命。它还可以帮助您的应用程序在各种较新旧的设备上运行良好，您可以使用CPU分析器在与应用程序交互时监视CPU使用情况和线程活动，但是，有关应用程序执行代码的更详细信息，应记录并检查方法跟踪。</p><p>对于应用程序进程中的每个线程，您可以找到在一段时间内执行哪些方法以及每个方法在执行期间消耗的CPU资源。您还可以使用方法跟踪来识别调用者和被调用者，调用者是一种调用另一种方法的方法，被调用方是另一种方法调用的方法。您可以使用此信息来确定哪些方法太频繁地调用特定资源繁重的任务，就可以尝试优化应用程序的代码以避免不必要的工作。</p><p>如果要收集详细的系统级数据，帮助您检查本地系统进程并解决由丢帧引起的UI jank，则应使用<a href="https://developer.android.google.cn/studio/profile/systrace-commandline.html" target="_blank" rel="noopener">Systrace</a>。或者，如果要导出使用<a href="https://developer.android.google.cn/reference/android/os/Debug.html" target="_blank" rel="noopener">Debug</a>捕获的.trace文件，则应使用<a href="https://developer.android.google.cn/studio/profile/traceview.html" target="_blank" rel="noopener">Traceview</a></p><h3 id="1-2-CPU-Profiler概述"><a href="#1-2-CPU-Profiler概述" class="headerlink" title="1.2 CPU Profiler概述"></a><strong>1.2 CPU Profiler概述</strong></h3><p>当您打开CPU分析器时，它会立即开始显示应用程序的CPU使用情况和线程活动。你会看到类似于下图的内容<br><img src="images/cpu_profiler_L2-2X.png" alt="image"></p><p>如上图所示，CPU Profiler的默认视图包括以下内容：</p><ul><li>①Event timeline： 显示您的应用程序在其生命周期中转换不同状态的活动，并指示用户与设备的交互，包括屏幕旋转事件。要了解有关事件时间轴的更多信息，包括如何启用它，请阅读我上一篇文章说到的启用高级分析</li><li>②CPU timeline: 显示您的应用程序的实时CPU使用率（占总可用CPU的百分比）以及应用程序使用的线程总数，时间轴还显示其他进程的CPU使用情况（如系统进程或其他应用程序），所以您可以将其与应用程序的使用情况进行比较。您可以通过沿着时间轴的水平轴移动鼠标来检查历史CPU使用率数据。</li><li><p>③Thread activity timeline: 列出属于您的应用程序进程的每个线程，并使用不同的颜色在时间轴上指示其活动。记录方法跟踪后，可以从此时间轴中选择一个线程，在跟踪窗格中检查其数据。 </p><ul><li>绿色: 线程处于活动状态或准备好使用CPU。也就是说，它处于”运行”或”可运行”状态。</li><li>黄色： 线程处于活动状态，但是在完成其工作之前，它正在等待I / O操作（如文件或网络I / O）。</li><li>灰色： 线程正在睡眠，不会消耗任何CPU时间，当线程需要访问尚未可用的资源时，有时会发生这种情况。要么线程进入自愿性睡眠，要么内核使线程休眠，直到所需的资源可用。</li></ul></li><li><p>④Tracing type：允许您选择以下选项之一来确定分析器如何记录方法跟踪。 </p><ul><li>Sampled： 在应用程序执行期间，您可以频繁地捕获应用程序的调用堆栈。profiler将捕获的数据集进行比较，以获取关于应用程序代码执行的时间和资源使用信息。基于sampled跟踪的一个固有问题是，如果您的应用程序在捕获调用堆栈并在下一次捕获之前退出该方法，那么该方法调用不会被分析器记录。如果您对具有这样短生命周期的跟踪方法感兴趣，您应该使用工具跟踪。</li><li>Instrumented： 在您的应用程序运行时记录每个方法调用的开始和结束时的时间戳。收集时间戳并与生成方法跟踪数据进行比较，包括时间信息和CPU使用。请注意，对每种方法进行检测的开销会影响运行时性能，并可能影响性能分析，因此对于具有相对较短的生命周期的方法来说，这更加值得注意。此外，如果您的应用程序在短时间内执行大量的方法，profiler可能很快超过它的文件大小限制，进而不能记录任何进一步的跟踪数据。</li></ul></li><li><p>⑤Record button：开始和停止记录方法跟踪。要了解更多信息，请继续看下去</p><blockquote><p>提示：profiler还报告了Android Studio和Android平台在你的应用程序过程中添加的线程的CPU使用情况，如JDWP、Profile Saver、Studio:VMStats、Studio:Perfa和Studio:Heartbeat(尽管，在线程活动时间线中显示的确切名称可能会有所不同)。这意味着您的应用程序在CPU时间轴上的CPU使用率也会报告这些线程使用的CPU时间。您可以在线程活动时间表中看到这些线程，并监视它们的活动。(但是，由于profiler线程执行native代码，因此无法为它们记录方法跟踪数据。)Android Studio会报告这些数据，这样你就可以很容易地识别出线程活动和CPU使用实际上是由你的应用程序代码引起的。</p></blockquote></li></ul><h3 id="1-3-记录和检查方法跟踪"><a href="#1-3-记录和检查方法跟踪" class="headerlink" title="1.3 记录和检查方法跟踪"></a><strong>1.3 记录和检查方法跟踪</strong></h3><p>要开始记录方法跟踪，从下拉菜单中选择<code>Sampled</code>或<code>Instrumented</code>类型，然后单击<code>Record</code>开始进行记录，完成后点击<code>Stop recording</code>停止记录。profiler自动选择记录的时间帧，并在方法跟踪窗格中显示它的跟踪信息，如下图所示。如果要检查不同线程的方法跟踪，只需从线程活动时间轴中选择它。<br><img src="images/cpu_profiler_L3-2X.png" alt="image"></p><ul><li>① Selected time frame: 在跟踪窗格中检查的记录时间框架的部分。当您第一次记录一个方法跟踪时，CPU分析器将自动选择您在CPU时间线中记录的整个长度。如果要检查仅记录的时间帧的一部分的方法跟踪数据，您可以单击并拖动高亮显示区域的边缘来修改它的长度。</li><li>②Timestamp： 表示记录方法跟踪的开始和结束时间(相对于profiler开始从设备收集CPU使用信息时)。你可以点击时间戳来自动选择整个记录作为你选定的时间框架——如果你有多个你想要转换的记录，这是非常有用的。</li><li>③Trace pane：显示您所选择的时间框架和线程的方法跟踪数据。仅当您记录至少一个方法跟踪后，此窗格才会显示。在此窗格中，您可以选择如何查看每个堆栈跟踪（使用跟踪选项卡）以及如何测量执行时间（使用时间参考下拉菜单）。</li><li>④: 选择显示为Top Down tree, Bottom Up tree, Call Chart, or Flame Chart这些类型的图。您可以在下面的部分中了解有关每个跟踪窗格选项卡的更多信息。</li><li><p>从下拉菜单中选择以下选项之一，以确定如何测量每个方法调用的时序信息： </p><ul><li>Wall clock time： 表示实际经过时间。</li><li>Thread time：计时信息表示实际的消耗时间减去不消耗CPU资源的那段时间的任何部分。对于任何给定的方法，它的线程时间总是小于或等于它的时钟时间。使用线程时间让您更好地了解给定方法所消耗的线程实际CPU使用量</li></ul></li></ul><h4 id="1-3-1-使用Call-Chart选项卡检查跟踪"><a href="#1-3-1-使用Call-Chart选项卡检查跟踪" class="headerlink" title="1.3.1 使用Call Chart选项卡检查跟踪"></a><strong>1.3.1 使用Call Chart选项卡检查跟踪</strong></h4><p>Call Chart选项卡提供一个方法跟踪的图形表示，其中一个方法调用(或调用者)的周期和时间在水平轴上表示，而它的callees则显示在垂直轴上。对系统api的方法调用以橙色显示，调用您的应用程序自己的方法以绿色显示，方法调用第三方api(包括java语言api)以蓝色显示。下面的图显示了一个示例调用图，并说明了给定方法的自时间、子时间和总时间的概念。关于如何使用自上而下和自下而上检查痕迹的部分，请继续看下去</p><p><img src="images/call_chart_1-2X.png" alt="图3"></p><blockquote><p>提示： 如果想要跳转到方法的源代码，请右键单击该方法，然后选择<code>Jump to Source</code>。这可以从任何窗格选项卡工作。</p></blockquote><h4 id="1-3-2-使用火焰图表-Flame-Chart-选项卡检查痕迹"><a href="#1-3-2-使用火焰图表-Flame-Chart-选项卡检查痕迹" class="headerlink" title="1.3.2 使用火焰图表(Flame Chart)选项卡检查痕迹"></a><strong>1.3.2 使用火焰图表(Flame Chart)选项卡检查痕迹</strong></h4><p>火焰图选项卡提供了一个反向调用图表，聚合了相同的调用堆栈。也就是说，收集相同的调用序列的相同方法被收集并表示为火焰图中的一个较长的栏(而不是将它们显示为多个更短的条，如调用图所示)。这样就更容易看出哪些方法消耗的时间最多。然而，这也意味着横轴不再表示时间轴，相反，它表示每个方法执行的相对时间。</p><p>为了帮助说明这个概念，考虑下面图4中的调用图表。注意，方法D对B(B1、B2和B3)进行多次调用，其中一些调用B对C(C1和C3)进行调用。</p><p><img src="images/call_chart_2-2X.png" alt="image"></p><p>因为B1、B2和B3共享相同的序列调用者(A→D→B)聚合,如下所示。同样,C1和C3聚合,因为它们共享相同的序列调用者(A→D→B→C)注意不包括C2,因为它有不同的调用者序列(A→D→C)。</p><p><img src="images/flame_chart_aggregation-2X.png" alt="image"></p><p>聚合方法调用用于创建flame 图，如下图所示。注意，对于任何给定的方法调用，在flame图中，消耗最多CPU时间的callees首先出现。<br><img src="images/flame_chart-2X.png" alt="image"></p><h4 id="1-3-3-使用自上而下和自下而上检查"><a href="#1-3-3-使用自上而下和自下而上检查" class="headerlink" title="1.3.3 使用自上而下和自下而上检查"></a><strong>1.3.3 使用自上而下和自下而上检查</strong></h4><p>Top Down选项卡显示方法调用的列表，扩展方法节点显示其callees。下图显示了上面的图3中调用图的顶部向下图。图中的每个箭头都是从调用者到callee。</p><p>下图所示，在顶部的down选项卡中扩展方法A的节点将显示它的callees、方法B和D。在此之后，扩展方法D的节点将暴露它的callees、方法B和C，等等。与火焰图选项卡类似，顶部向下的树聚合跟踪信息，用于共享相同调用堆栈的相同方法。也就是说，火焰图标签提供了顶部下标签的图形表示。</p><p>Top Down选项卡提供以下信息，以帮助描述在每个方法调用上花费的CPU时间(在选定的时间段内，时间也代表线程总时间的百分比):</p><ul><li>Self:方法调用用于执行自己的代码而不是它的callees的时间量，如上面的图3所示。</li><li>Children：方法调用花费的时间用于执行其被调用者，而不是其自己的代码，如图3中的方法D所示。</li><li>Total：方法的Self和Children的时间的总和。这表示应用程序执行方法调用的总时间量，如图3所示的方法D。<br>  <img src="images/top_down_tree-2X.png" alt="image"></li></ul><p>Bottom Up选项卡显示一个方法调用列表，扩展方法的节点显示其调用者。使用上图所示的例子中,下图提供了一个自下而上方法C .在自下而上的树中打开方法C的节点，显示每个独特的调用者,方法B和d .注意,虽然B两次调用C,B当扩大节点只出现一次自下而上方法C的树。再此之后，展开节点B显示其调用者方法A和D.</p><p><img src="images/bottom_up_tree-2X.png" alt="image"></p><p>Bottom Up选项卡对于那些消耗最多(或最少)CPU时间的方法的排序方法很有用。您可以检查每个节点，以确定哪些调用者在调用这些方法上花费最多的CPU时间。与上面的树相比，底部树中每个方法的定时信息都是在每棵树的顶部(顶部节点)的方法。在记录期间，CPU时间也被表示为线程总时间的百分比。下表有助于解释如何解释顶级节点及其调用方方法(子节点)的定时信息。</p><table><thead><tr><th style="text-align:left">名称</th><th style="text-align:left">Self</th><th style="text-align:left">Children</th><th style="text-align:left">Total</th></tr></thead><tbody><tr><td style="text-align:left">自下而上树顶部的方法（顶层节点）</td><td style="text-align:left">表示用于执行其自己的代码而不是其callees的方法的总时间。与上面的树相比，这个时间信息表示在记录期间对该方法的所有调用的总和。</td><td style="text-align:left">表示用于执行callees而不是自己的代码的总时间。与上面的树相比，这个时间信息表示在记录期间对该方法的callees调用的所有调用的总和。</td><td style="text-align:left">Self时间和Children的时间总和</td></tr><tr><td style="text-align:left">Caller 方法 (子节点)</td><td style="text-align:left">表示调用者调用callee的总时间。使用上图中的底向上树作为例子，方法B的自我时间将等于每个方法C调用时的Self时间的总和。</td><td style="text-align:left">表示调用者调用的callee的总子时间。在上图中使用底部向上的树为例，方法B的孩子时间将等于每个方法C调用时执行方法C的总和。</td><td style="text-align:left">Self时间和Children的时间总和</td></tr></tbody></table><blockquote><p>对于给定的记录，当profiler达到文件大小限制时，Android Studio停止收集新数据(但是这并没有停止记录)。这种情况在执行检测跟踪时通常会发生得更快，因为这种类型的跟踪会在较短的时间内收集更多的数据，而不是取样跟踪。如果将检查时间帧扩展到在到达限制后发生的记录期间，那么跟踪窗格中的计时数据不会发生变化(因为没有可用的新数据)。此外，当您只选择没有可用数据的记录的部分时，跟踪窗格将显示NaN用于计时信息。</p></blockquote><h2 id="二、-内存分析器memory-profiler"><a href="#二、-内存分析器memory-profiler" class="headerlink" title="二、 内存分析器memory profiler"></a><strong>二、 内存分析器memory profiler</strong></h2><p>内存分析器是Android Profiler中的一个组件，它可以帮助您识别内存泄漏和内存溢出，从而导致存根、冻结甚至应用程序崩溃。它显示了应用程序内存使用的实时图，让您捕获堆转储、强制垃圾收集和跟踪内存分配。</p><p>要打开内存分析器和cpu检查器一样，就在隔壁。</p><h3 id="2-1-为什么使用内存分析器"><a href="#2-1-为什么使用内存分析器" class="headerlink" title="2.1 为什么使用内存分析器"></a><strong>2.1 为什么使用内存分析器</strong></h3><p>Android提供了一个托管内存环境——当它确定你的应用不再使用某些对象时，垃圾收集器会将未使用的内存释放回堆。在所有Android版本的某个点上，系统必须短暂地暂停代码。大多数时候，停顿是不可察觉的。但是，如果你的应用程序分配内存的速度快于系统收集的速度，你的应用程序可能会被延迟，而收集器释放了足够的内存来满足你的分配。延迟可能会导致应用程序跳过帧并导致明显的慢速。</p><p>即使你的应用程序没有表现出缓慢，如果它泄露了内存，它仍然可以保留那个内存，即使它在后台。通过强制不必要的垃圾收集事件，这种行为可以降低系统内存性能的其他部分。最终，系统不得不杀死你的应用程序来回收内存。然后当用户返回到你的应用程序时，它必须重新启动。</p><p>为了帮助防止这些问题，您应该使用内存分析器来执行以下操作：</p><ul><li>在可能导致性能问题的时间轴中寻找不良的内存分配模式</li><li>Dump Java堆，以便在任何时间查看哪些对象正在使用内存。长时间的堆转储可以帮助识别内存泄漏。</li><li>在正常和极端的用户交互过程中记录内存分配，以精确地确定您的代码在短时间内分配的对象或分配被泄漏的对象。</li></ul><p>有关可以减少应用程序内存使用的编程实践的信息，请参阅<a href="https://developer.android.google.cn/topic/performance/memory.html" target="_blank" rel="noopener">管理应用程序的内存</a>。</p><h3 id="2-2-内存分析器概述"><a href="#2-2-内存分析器概述" class="headerlink" title="2.2 内存分析器概述"></a><strong>2.2 内存分析器概述</strong></h3><p><img src="images/memory-profiler-callouts_2x.png" alt="image"></p><p>如上图所示，内存分析器的默认视图包括以下内容：</p><ul><li>① 强制执行垃圾收集事件的按钮。</li><li>② 捕获堆转储的按钮。</li><li>③ 记录内存分配的按钮。</li><li>④ 放大时间线的按钮。</li><li>⑤ 跳转到实时内存数据的按钮。</li><li>⑥ 事件时间线显示活动状态、用户输入事件和屏幕旋转事件。</li><li><p>⑦ 内存使用时间表，其中包括以下内容： </p><ul><li>每个内存类别使用多少内存的堆栈图，如左边的y轴和顶部的颜色键所示。</li><li>虚线表示已分配对象的数量，如右侧y轴所示。</li><li>每个垃圾收集事件的图标。</li></ul></li></ul><p>但是，默认情况下并不是所有的分析数据都可见。如果您看到一条消息，说“高级分析不可用于所选进程”，则需要启用高级分析以查看以下内容：</p><ul><li>活动时间表</li><li>分配对象的数量</li><li>垃圾收集事件</li></ul><blockquote><p>提示： 与之前的Android监控工具相比，新的内存分析器记录了你的内存使用情况，所以看起来你的内存使用量会更高。内存分析器监视一些额外的类别，这些类别增加了总数，但如果您只关心Java堆内存，那么“Java”的数字应该与上一个Android监视器的值类似。新的号码记录了从Zygote分派到应用程序的Java堆中的所有物理内存页面，这准确表示您的应用程序实际使用多少物理内存。</p></blockquote><h3 id="2-3-记录内存分配"><a href="#2-3-记录内存分配" class="headerlink" title="2.3 记录内存分配"></a><strong>2.3 记录内存分配</strong></h3><p>查看堆转储时，查看分配了多少内存的快照很有用，它不会显示如何分配内存。为此，您需要记录内存分配。完成记录会话后，您可以看到以下记录的持续时间：</p><ul><li>分配了哪些对象以及它们使用了多少空间。</li><li>在堆栈跟踪中分配每个对象的位置，其中包括线程。</li></ul><p><img src="images/memory-profiler-allocations_2x.png" alt="image"></p><p>要查看应用程序的内存分配，请单击内存分析器工具栏中的<code>Record memory allocations</code>。当它记录时，与你的应用程序进行交互，以引起内存溢出或内存泄漏。完成后，单击<code>Stop recording</code>。</p><p>分配的对象列表出现在时间轴下面，按类名称分组，按堆计数排序，如上图所示。</p><blockquote><p>分配跟踪器最多记录65535个分配。如果您的记录超出此限制，则只有最近65535个分配将保存在该记录中。</p></blockquote><p>要检查分配记录，请按照下列步骤操作：</p><ul><li>浏览列表以查找具有非常大的堆计数且可能泄漏的对象，要帮助查找已知类，请单击类名列标题按字母顺序排序。然后单击一个类名，Instance View 窗格就会显示在右侧，显示该类的每个实例，如下图所示。</li><li>在<code>Instance View</code>窗格中，单击一个实例。<code>Call Stack</code>选项卡显示在下面，显示了哪个实例被分配在哪个线程中。</li><li>在<code>Call Stack</code>选项卡中，单击任意行可以在编辑器中跳转到该代码。</li></ul><p><img src="images/memory-profiler-allocations-detail_2x.png" alt="image"></p><p>默认情况下，列表是按类名排列的。在列表的顶部，您可以使用右下拉菜单在列表之间切换:</p><ul><li>Arrange by class： 根据类名分配。</li><li>Arrange by package：根据包名分配。</li><li>Arrange by callstack: 根据调用堆栈排序</li></ul><h3 id="2-4-捕获堆转储"><a href="#2-4-捕获堆转储" class="headerlink" title="2.4 捕获堆转储"></a><strong>2.4 捕获堆转储</strong></h3><p>堆转储显示在捕获堆转储时应用程序正在使用内存的对象。特别是在扩展用户会话之后，堆转储可以通过显示仍然在内存中的对象来帮助识别内存泄漏。捕获堆转储后，可以查看以下内容:</p><ul><li>您的应用程序分配了哪些类型的对象，以及每个对象的数量。</li><li>每个对象使用多少内存</li><li>每个对象的引用被保留在你的代码中。</li><li>调用堆栈，用于分配对象的位置（只有在记录分配时捕获堆转储）。</li></ul><p><img src="images/memory-profiler-dump_2x.png" alt="图4"></p><p>要捕获堆转储，单击Memory-Profiler工具栏中的dump Java堆<img src="images/profiler-heap-dump.png" alt="image">。在转储堆时，Java内存的数量可能会暂时增加。这是正常的，因为堆转储发生在与应用程序相同的进程中，需要一些内存来收集数据。</p><p>堆转储出现在内存时间轴下方，显示堆中的所有类类型，如上图所示。</p><p>要检查你的堆，请按照下列步骤操作：</p><ul><li>浏览列表以查找具有异常大堆计数的对象，因为它可能会被泄露。为了帮助查找已知类，请单击类名列标题以按字母顺序排序。然后单击类名。实例视图窗格出现在右边，显示该类的每个实例，如下图所示。</li><li>在<code>Instance View</code>窗格中，单击一个实例。 <code>References</code>选项卡显示在下面，显示对该对象的所有引用。或者单击实例名称旁边的箭头以查看其所有字段，然后单击字段名称以查看其所有引用。如果要查看某个字段的实例详细信息，请右键单击该字段，然后选择<code>Go to Instance</code>。</li><li>在<code>References</code>选项卡中，如果识别可能是内存泄漏的引用，请右键单击它，然后选择<code>Go to Instance.</code>。这将从堆转储中选择相应的实例，显示您自己的实例数据。</li></ul><p>默认情况下，堆转储不会显示每个已分配对象的堆栈跟踪。要获取堆栈跟踪，您必须在单击转储Java堆之前开始记录内存分配。如果您这样做，您可以在实例视图中选择一个实例，并在References选项卡旁边看到Call Stack选项卡，如下图所示。但是，在开始记录分配之前，可能已经分配了一些对象，因此这些对象无法使用调用堆栈。包含一个调用堆栈的实例在图标上有一个<code>stack</code>标记<img src="images/memory-profiler-icon-stack.png" alt="image">。</p><p><img src="images/memory-profiler-dump-stacktrace_2x.png" alt="image"></p><p>在classes列表中，您可以看到以下信息：</p><ul><li>Heap Count: 堆中的实例数。</li><li>Shallow Size: 此堆中所有实例的总大小（以字节为单位）。</li><li>Retained Size: 这个类的所有实例(以字节为单位)保留的内存总大小。</li></ul><p>在类列表的顶部，可以使用左下拉列表在以下堆转储之间切换:</p><ul><li>Default heap: 当系统没有指定堆时。</li><li>App heap: 应用程序分配内存的主堆。</li><li>Image heap: 系统引导映像，包含在引导期间预加载的类。这里的分配保证永远不会移动或离开。</li><li>Zygote heap: Android系统中分发应用程序进程的写时复制堆</li></ul><p>默认情况下，列表按保留大小列排序。您可以单击任何列标题来更改列表的排序方式。</p><p>在Instance View中，每个实例包括以下内容：</p><ul><li>Depth：从任何GC根到所选实例的跳数最短。</li><li>Shallow Size：此实例的大小。</li><li>Retained Size：此实例支配的内存大小（根据支配者树)。</li></ul><h2 id="三、-网络分析器-Network-Profiler"><a href="#三、-网络分析器-Network-Profiler" class="headerlink" title="三、 网络分析器(Network Profiler)"></a><strong>三、 网络分析器(Network Profiler)</strong></h2><p>网络分析器在时间轴上显示实时网络活动，显示发送和接收的数据，以及当前连接的数量。这让您可以检查应用程序如何和何时传输数据，并适当地优化底层代码。</p><p>打开面板的步骤和上面的几乎一致。</p><h3 id="3-1-为什么要使用网络分析器"><a href="#3-1-为什么要使用网络分析器" class="headerlink" title="3.1 为什么要使用网络分析器"></a><strong>3.1 为什么要使用网络分析器</strong></h3><p>当应用程序向网络发出请求时，设备必须使用耗电的移动或WiFi无线电来发送和接收数据包。接收器不仅使用电力传输数据，而且还使用额外的电源打开和保持唤醒。</p><p>使用网络分析器，您可以查找频繁的、短的网络活动高峰，这意味着您的应用程序要求网络经常打开，或者长时间保持唤醒，以处理许多短的请求。这一模式表明，您可以通过批处理网络请求来优化应用程序，以改善电池性能，从而减少网络必须打开或接收数据的次数。这也使得网络可以切换到低功率模式，以节省电池的时间间隔。</p><p>有关优化应用程序网络活动的技术的更多信息，请参阅 <a href="https://developer.android.google.cn/topic/performance/power/network/index.html" target="_blank" rel="noopener">Reducing Network Battery Drain</a>。</p><h3 id="3-2-网络分析器概述"><a href="#3-2-网络分析器概述" class="headerlink" title="3.2 网络分析器概述"></a><strong>3.2 网络分析器概述</strong></h3><p>在窗口的顶部，您可以看到事件时间线和①无线电电源状态(high/low)和wi-fi。在时间轴上，您可以单击和拖动来选择②时间轴的一部分来检查流量。下面的③窗口显示在时间轴的选定部分中发送和接收的文件，包括文件名、大小、类型、状态和时间。您可以通过单击任何列标题来对列表进行排序。您还可以看到时间线所选部分的详细分解，显示每个文件被发送或接收的时间。</p><p>单击连接的名称，查看所选文件发送或接收的详细信息。单击④选项卡查看响应数据、头信息或调用堆栈。</p><p><img src="images/networkprofiler_2x.png" alt="image"></p><blockquote><p>提示：您必须启用高级概要分析来选择时间轴的一部分来检查，查看发送和接收的文件的列表，或者查看所选文件发送或接收的详细信息。为了启用高级分析，请查看上一篇文章</p></blockquote><h3 id="3-3-网络连接疑难解答"><a href="#3-3-网络连接疑难解答" class="headerlink" title="3.3 网络连接疑难解答"></a><strong>3.3 网络连接疑难解答</strong></h3><p>如果网络分析器检测到流量值，但无法识别任何支持的网络请求。您将收到以下错误消息：”Network Profiling Data Unavailable: There is no information for the network traffic you’ve selected.”</p><p>目前，网络分析器只支持HttpURLConnection和OkHttp库。如果您的应用程序使用另一个网络连接库，那么您可能无法在网络分析器中查看您的网络活动。如果您已经收到了这个错误消息，但是您的应用程序确实使用HttpURLConnection或OkHttp，请报告错误，以便我们可以调查这个问题。</p><p>转载：<a href="http://blog.csdn.net/niubitianping/article/details/72617864" target="_blank" rel="noopener">http://blog.csdn.net/niubitianping/article/details/72617864</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Android-Profiler分为三大模块：-cpu、内存-、网络。基本的使用在上一篇文章有讲到。这里详细说一下。&quot;&gt;&lt;a href=&quot;#Android-Profiler分为三大模块：-cpu、内存-、网络。基本的使用在上一篇文章有讲到。这里详细说一下。&quot; cl
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Android Studio 3中解决androidannotations报错</title>
    <link href="https://seachal.me/Android/2018/02/06/Android/Android%20Studio%203%E4%B8%AD%E8%A7%A3%E5%86%B3androidannotations%E6%8A%A5%E9%94%99/"/>
    <id>https://seachal.me/Android/2018/02/06/Android/Android Studio 3中解决androidannotations报错/</id>
    <published>2018-02-06T11:30:30.000Z</published>
    <updated>2018-10-21T07:09:54.454Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Android-Studio-3中解决androidannotations报错"><a href="#Android-Studio-3中解决androidannotations报错" class="headerlink" title="Android Studio 3中解决androidannotations报错"></a>Android Studio 3中解决androidannotations报错</h1><h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><p>最近Fork了一个项目，报以下错误<br><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Error:Execution failed <span class="keyword">for</span> task <span class="string">':sample:javaPreCompileDebug'</span>.</span><br><span class="line">&gt; Annotation processors must be explicitly declared now.  The following dependencies <span class="keyword">on</span> the compile classpath are found <span class="keyword">to</span> contain annotation processor.  Please <span class="keyword">add</span> them <span class="keyword">to</span> the annotationProcessor configuration.</span><br><span class="line">    - androidannotations-<span class="number">4.0</span>.<span class="number">0</span>.jar (org.androidannotations:androidannotations:<span class="number">4.0</span>.<span class="number">0</span>)</span><br><span class="line">  Alternatively, <span class="keyword">set</span> android.defaultConfig.javaCompileOptions.annotationProcessorOptions.includeCompileClasspath = <span class="keyword">true</span> <span class="keyword">to</span> <span class="keyword">continue</span> <span class="keyword">with</span> previous behavior.  Note that this option <span class="keyword">is</span> <span class="keyword">deprecated</span> <span class="keyword">and</span> will be removed <span class="keyword">in</span> the <span class="keyword">future</span>.</span><br><span class="line">  See https:<span class="comment">//developer.android.com/r/tools/annotation-processor-error-message.html for more details.</span></span><br></pre></td></tr></table></figure></p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>在app目录下的gradle文件中添加</p><figure class="highlight plain"><figcaption><span>&#123;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    annotationProcessorOptions &#123;</span><br><span class="line">        includeCompileClasspath =  true</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>变为</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">android</span> &#123;</span><br><span class="line">    <span class="attribute">compileSdkVersion</span> <span class="number">25</span></span><br><span class="line">    buildToolsVersion <span class="string">"26.0.2"</span></span><br><span class="line"></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        <span class="attribute">minSdkVersion</span> <span class="number">11</span></span><br><span class="line">        targetSdkVersion <span class="number">25</span></span><br><span class="line">        versionCode <span class="number">3</span></span><br><span class="line">        versionName <span class="string">"3.0.0"</span></span><br><span class="line"></span><br><span class="line">        javaCompileOptions &#123;</span><br><span class="line">            <span class="section">annotationProcessorOptions</span> &#123;</span><br><span class="line">                <span class="attribute">includeCompileClasspath</span> = <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Android-Studio-3中解决androidannotations报错&quot;&gt;&lt;a href=&quot;#Android-Studio-3中解决androidannotations报错&quot; class=&quot;headerlink&quot; title=&quot;Android Studio
      
    
    </summary>
    
      <category term="Android" scheme="https://seachal.me/categories/Android/"/>
    
    
      <category term="Android" scheme="https://seachal.me/tags/Android/"/>
    
      <category term="问题解决" scheme="https://seachal.me/tags/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
      <category term="Android Studio" scheme="https://seachal.me/tags/Android-Studio/"/>
    
      <category term="androidannotations" scheme="https://seachal.me/tags/androidannotations/"/>
    
  </entry>
  
  <entry>
    <title>Android Studio 3中解决butterknife:7报错的问题</title>
    <link href="https://seachal.me/Android/2018/02/06/Android/Android%20Studio%203%E4%B8%AD%E8%A7%A3%E5%86%B3butterknife:7%E6%8A%A5%E9%94%99%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://seachal.me/Android/2018/02/06/Android/Android Studio 3中解决butterknife:7报错的问题/</id>
    <published>2018-02-06T09:30:30.000Z</published>
    <updated>2018-10-21T07:09:54.455Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Android-Studio-3中解决butterknife-7报错的问题"><a href="#Android-Studio-3中解决butterknife-7报错的问题" class="headerlink" title="Android Studio 3中解决butterknife:7报错的问题"></a>Android Studio 3中解决butterknife:7报错的问题</h1><p>最近从GitHub上Fork了一个项目<a href="https://github.com/Seachal/BookReader" target="_blank" rel="noopener">任阅</a>，用Android Studio3 打开后<br><a href="https://seachal.me/Android/2018/02/06/Android/Android%20Studio%203.0%E4%B8%AD%E8%A7%A3%E5%86%B3apt%E6%8A%A5%E9%94%99%EF%BC%8Candroid-apt%E5%88%87%E6%8D%A2%E4%B8%BA%E5%AE%98%E6%96%B9annotationProcessor%20/">Android Studio 3.0中android-apt切换为官方annotationProcessor</a><br>解决apt的问题后butterknife又有问题。</p><p>报错：</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Error:Execution failed <span class="keyword">for</span> task <span class="string">':app:javaPreCompileDebug'</span>.</span><br><span class="line">&gt; Annotation processors must be explicitly declared now.  The following dependencies <span class="keyword">on</span> the compile classpath are found <span class="keyword">to</span> contain annotation processor.  Please <span class="keyword">add</span> them <span class="keyword">to</span> the annotationProcessor configuration.</span><br><span class="line">    - butterknife-<span class="number">7.0</span>.<span class="number">1</span>.jar (com.jakewharton:butterknife:<span class="number">7.0</span>.<span class="number">1</span>)</span><br><span class="line">  Alternatively, <span class="keyword">set</span> android.defaultConfig.javaCompileOptions.annotationProcessorOptions.includeCompileClasspath = <span class="keyword">true</span> <span class="keyword">to</span> <span class="keyword">continue</span> <span class="keyword">with</span> previous behavior.  Note that this option <span class="keyword">is</span> <span class="keyword">deprecated</span> <span class="keyword">and</span> will be removed <span class="keyword">in</span> the <span class="keyword">future</span>.</span><br><span class="line">  See https:<span class="comment">//developer.android.com/r/tools/annotation-processor-error-message.html for more details.</span></span><br></pre></td></tr></table></figure><p>解决办法：<br>加上 annotationProcessor ‘com.jakewharton:butterknife:7.0.1’即可解决</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">compile</span> <span class="string">'com.jakewharton:butterknife:7.0.1'</span></span><br><span class="line">+ annotationProcessor <span class="string">'com.jakewharton:butterknife:7.0.1'</span></span><br></pre></td></tr></table></figure><p>参考：<a href="https://www.jianshu.com/p/09dc882a9fad" target="_blank" rel="noopener">https://www.jianshu.com/p/09dc882a9fad</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Android-Studio-3中解决butterknife-7报错的问题&quot;&gt;&lt;a href=&quot;#Android-Studio-3中解决butterknife-7报错的问题&quot; class=&quot;headerlink&quot; title=&quot;Android Studio 3中解
      
    
    </summary>
    
      <category term="Android" scheme="https://seachal.me/categories/Android/"/>
    
    
      <category term="Android" scheme="https://seachal.me/tags/Android/"/>
    
      <category term="问题解决" scheme="https://seachal.me/tags/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
      <category term="Android Studio" scheme="https://seachal.me/tags/Android-Studio/"/>
    
      <category term="butterknife" scheme="https://seachal.me/tags/butterknife/"/>
    
  </entry>
  
  <entry>
    <title>Android Studio 3.0中解决apt报错，android-apt切换为官方annotationProcessor</title>
    <link href="https://seachal.me/Android/2018/02/06/Android/Android%20Studio%203.0%E4%B8%AD%E8%A7%A3%E5%86%B3apt%E6%8A%A5%E9%94%99%EF%BC%8Candroid-apt%E5%88%87%E6%8D%A2%E4%B8%BA%E5%AE%98%E6%96%B9annotationProcessor%20/"/>
    <id>https://seachal.me/Android/2018/02/06/Android/Android Studio 3.0中解决apt报错，android-apt切换为官方annotationProcessor /</id>
    <published>2018-02-06T08:30:30.000Z</published>
    <updated>2018-10-21T07:09:54.454Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Android-Studio-3-0中解决apt报错，android-apt切换为官方annotationProcessor"><a href="#Android-Studio-3-0中解决apt报错，android-apt切换为官方annotationProcessor" class="headerlink" title="Android Studio 3.0中解决apt报错，android-apt切换为官方annotationProcessor"></a>Android Studio 3.0中解决apt报错，android-apt切换为官方annotationProcessor</h1><p>最近从GitHub上Fork了一个项目<a href="https://github.com/Seachal/BookReader" target="_blank" rel="noopener">任阅</a>，用Android Studio3 打开后</p><h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Error:Cannot choose between the following configurations of project :EasyAdapterLibrary:</span><br><span class="line">  -<span class="ruby"> debugApiElements</span></span><br><span class="line"><span class="ruby">  - debugRuntimeElements</span></span><br><span class="line"><span class="ruby">  - releaseApiElements</span></span><br><span class="line"><span class="ruby">  - releaseRuntimeElements</span></span><br><span class="line"><span class="ruby">All of them match the consumer <span class="symbol">attributes:</span></span></span><br><span class="line"><span class="ruby">  - Configuration <span class="string">'debugApiElements'</span><span class="symbol">:</span></span></span><br><span class="line"><span class="ruby">      - Found com.android.build.api.attributes.BuildTypeAttr <span class="string">'debug'</span> but wasn<span class="string">'t required.</span></span></span><br><span class="line"><span class="ruby">      - Found com.android.build.gradle.internal.dependency.AndroidTypeAttr <span class="string">'Aar'</span> but wasn<span class="string">'t required.</span></span></span><br><span class="line"><span class="ruby">      - Found com.android.build.gradle.internal.dependency.VariantAttr <span class="string">'debug'</span> but wasn<span class="string">'t required.</span></span></span><br><span class="line"><span class="ruby">      - Found org.gradle.api.attributes.Usage <span class="string">'java-api'</span> but wasn<span class="string">'t required.</span></span></span><br><span class="line"><span class="ruby">  - Configuration <span class="string">'debugRuntimeElements'</span><span class="symbol">:</span></span></span><br><span class="line"><span class="ruby">      - Found com.android.build.api.attributes.BuildTypeAttr <span class="string">'debug'</span> but wasn<span class="string">'t required.</span></span></span><br><span class="line"><span class="ruby">      - Found com.android.build.gradle.internal.dependency.AndroidTypeAttr <span class="string">'Aar'</span> but wasn<span class="string">'t required.</span></span></span><br><span class="line"><span class="ruby">      - Found com.android.build.gradle.internal.dependency.VariantAttr <span class="string">'debug'</span> but wasn<span class="string">'t required.</span></span></span><br><span class="line"><span class="ruby">      - Found org.gradle.api.attributes.Usage <span class="string">'java-runtime'</span> but wasn<span class="string">'t required.</span></span></span><br><span class="line"><span class="ruby">  - Configuration <span class="string">'releaseApiElements'</span><span class="symbol">:</span></span></span><br><span class="line"><span class="ruby">      - Found com.android.build.api.attributes.BuildTypeAttr <span class="string">'release'</span> but wasn<span class="string">'t required.</span></span></span><br><span class="line"><span class="ruby">      - Found com.android.build.gradle.internal.dependency.AndroidTypeAttr <span class="string">'Aar'</span> but wasn<span class="string">'t required.</span></span></span><br><span class="line"><span class="ruby">      - Found com.android.build.gradle.internal.dependency.VariantAttr <span class="string">'release'</span> but wasn<span class="string">'t required.</span></span></span><br><span class="line"><span class="ruby">      - Found org.gradle.api.attributes.Usage <span class="string">'java-api'</span> but wasn<span class="string">'t required.</span></span></span><br><span class="line"><span class="ruby">  - Configuration <span class="string">'releaseRuntimeElements'</span><span class="symbol">:</span></span></span><br><span class="line"><span class="ruby">      - Found com.android.build.api.attributes.BuildTypeAttr <span class="string">'release'</span> but wasn<span class="string">'t required.</span></span></span><br><span class="line"><span class="ruby">      - Found com.android.build.gradle.internal.dependency.AndroidTypeAttr <span class="string">'Aar'</span> but wasn<span class="string">'t required.</span></span></span><br><span class="line"><span class="ruby">      - Found com.android.build.gradle.internal.dependency.VariantAttr <span class="string">'release'</span> but wasn<span class="string">'t required.</span></span></span><br><span class="line"><span class="ruby">      - Found org.gradle.api.attributes.Usage <span class="string">'java-runtime'</span> but wasn<span class="string">'t required.</span></span></span><br></pre></td></tr></table></figure><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>从Messages中并没有查看出是什么原因，但是此项目之前使用的AS2.1，并且gradle中使用了apt，所以我怀疑是Studio升级到3.0之后原来的配置方式apt与最新版本Gradle已经不兼容。</p><blockquote><p>APT<br>APT(Annotation Processing Tool)是一种处理注释的工具,它对源代码文件进行检测找出其中的Annotation，使用Annotation进行额外的处理。<br>Annotation处理器在处理Annotation时可以根据源文件中的Annotation生成额外的源文件和其它的文件(文件具体内容由Annotation处理器的编写者决定),APT还会编译生成的源文件和原来的源文件，将它们一起生成class文件。</p></blockquote><hr><blockquote><p>Android Gradle插件2.2版本发布后，Android 官方提供了<code>annotationProcessor</code>来代替<code>android-apt</code>，<code>annotationProcessor</code>同时支持 javac 和 jack 编译方式，而<code>android-apt</code>只支持 javac 方式。同时<code>android-apt</code>作者宣布不在维护，当然目前<code>android-apt</code>仍然可以正常运行，如果你没有想支持 jack 编译方式的话，可以继续使用 <code>android-apt</code>。Android Studio 3.0执行android-apt报错：</p></blockquote><p>Android Studio 3.0执行android-apt一般会报错：</p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">Error</span>:android-apt plugin <span class="keyword">is</span> incompatible <span class="keyword">with</span> the Android Gradle plugin.  Please <span class="keyword">use</span> <span class="symbol">'annotationProcessor</span>' <span class="keyword">configuration</span> instead.</span><br></pre></td></tr></table></figure><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p><strong>android-apt切换为官方annotationProcessor的方法</strong></p><p>1、 在build.gradle修改为Android Gradle 3.0 插件</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">buildscript</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">        google()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">-        <span class="keyword">classpath</span> <span class="string">'com.android.tools.build:gradle:2.1.0'</span></span><br><span class="line">+        <span class="keyword">classpath</span> <span class="string">'com.android.tools.build:gradle:3.0.1'</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、删除build.gradle里android-apt 的相关配置</p><p><em>项目目录下</em></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">buildscript</span> &#123;</span><br><span class="line">     <span class="keyword">repositories</span> &#123;</span><br><span class="line">         maven&#123; url <span class="string">'http://maven.aliyun.com/nexus/content/groups/public/'</span>&#125;</span><br><span class="line">         jcenter()</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">dependencies</span> &#123;</span><br><span class="line">-        <span class="keyword">classpath</span> <span class="string">'com.android.tools.build:gradle:2.1.0'</span></span><br><span class="line">-        <span class="keyword">classpath</span> <span class="string">'com.neenbedankt.gradle.plugins:android-apt:1.8'</span></span><br><span class="line">+        <span class="keyword">classpath</span> <span class="string">'com.android.tools.build:gradle:3.0.1'</span></span><br><span class="line">+       <span class="comment">// classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'</span></span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p><em>app目录下</em></p><figure class="highlight plain"><figcaption><span>plugin: 'com.android.application'</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- apply plugin: &apos;android-apt&apos;</span><br><span class="line">+ //apply plugin: &apos;android-apt&apos;</span><br><span class="line"> </span><br><span class="line"> android &#123;</span><br><span class="line">     compileSdkVersion 23</span><br><span class="line">     buildToolsVersion &quot;23.0.3&quot;</span><br></pre></td></tr></table></figure><p>3、替换build.gradle里旧的配置为新的配置</p><p>做以下替换</p><ul><li>compile 改为 implementation,</li><li>apt 改为 annotationProcessor  </li><li>testCompile 改为 androidTestImplementation</li></ul><p><em>app目录下</em></p><figure class="highlight plain"><figcaption><span>'com.squareup.okhttp3:okhttp:3.2.0'</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">     // Annotation</span><br><span class="line">-    compile &apos;com.google.dagger:dagger:2.0.2&apos;</span><br><span class="line">-    apt &apos;com.google.dagger:dagger-compiler:2.0.2&apos;</span><br><span class="line">+//    compile &apos;com.google.dagger:dagger:2.0.2&apos;</span><br><span class="line">+//    apt &apos;com.google.dagger:dagger-compiler:2.0.2&apos;</span><br><span class="line">+    implementation &apos;com.google.dagger:dagger:2.9&apos;</span><br><span class="line">+    annotationProcessor &apos;com.google.dagger:dagger-compiler:2.9&apos;</span><br><span class="line">+</span><br></pre></td></tr></table></figure><p>4、清理缓存并重启Android Studio 3.0</p><p>5 扩展<br>同样适用于一下报错信息的解决</p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">Error</span>:android-apt plugin <span class="keyword">is</span> incompatible <span class="keyword">with</span> the Android Gradle plugin.  Please <span class="keyword">use</span> <span class="symbol">'annotationProcessor</span>' <span class="keyword">configuration</span> instead.</span><br></pre></td></tr></table></figure><p>参考：<br><a href="https://www.jianshu.com/p/c1666a947692" target="_blank" rel="noopener">https://www.jianshu.com/p/c1666a947692</a><br><a href="https://majing.io/posts/10000003001155" target="_blank" rel="noopener">https://majing.io/posts/10000003001155</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Android-Studio-3-0中解决apt报错，android-apt切换为官方annotationProcessor&quot;&gt;&lt;a href=&quot;#Android-Studio-3-0中解决apt报错，android-apt切换为官方annotationProce
      
    
    </summary>
    
      <category term="Android" scheme="https://seachal.me/categories/Android/"/>
    
    
      <category term="Android" scheme="https://seachal.me/tags/Android/"/>
    
      <category term="问题解决" scheme="https://seachal.me/tags/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
      <category term="Android Studio" scheme="https://seachal.me/tags/Android-Studio/"/>
    
      <category term="apt" scheme="https://seachal.me/tags/apt/"/>
    
  </entry>
  
  <entry>
    <title>RelativeLayout、Framelayout 两布局重叠,使下层不响应点击事件</title>
    <link href="https://seachal.me/Android/2018/01/23/Android/RelativeLayout%E3%80%81Framelayout%20%E4%B8%A4%E5%B8%83%E5%B1%80%E9%87%8D%E5%8F%A0,%E4%BD%BF%E4%B8%8B%E5%B1%82%E4%B8%8D%E5%93%8D%E5%BA%94%E7%82%B9%E5%87%BB%E4%BA%8B%E4%BB%B6/"/>
    <id>https://seachal.me/Android/2018/01/23/Android/RelativeLayout、Framelayout 两布局重叠,使下层不响应点击事件/</id>
    <published>2018-01-23T08:30:30.000Z</published>
    <updated>2018-10-21T07:09:54.464Z</updated>
    
    <content type="html"><![CDATA[<h1 id="RelativeLayout、Framelayout-两布局重叠-使下层不响应点击事件"><a href="#RelativeLayout、Framelayout-两布局重叠-使下层不响应点击事件" class="headerlink" title="RelativeLayout、Framelayout 两布局重叠,使下层不响应点击事件"></a>RelativeLayout、Framelayout 两布局重叠,使下层不响应点击事件</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">代码段A</span><br><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"> <span class="tag">&lt;<span class="name">ListView</span></span></span><br><span class="line"><span class="tag"> <span class="attr">android:id</span>=<span class="string">"@+id/listview"</span> </span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:divider</span>=<span class="string">"@null"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:fadingEdge</span>=<span class="string">"none"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:listSelector</span>=<span class="string">"@android:color/transparent"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">android:scrollbars</span>=<span class="string">"none"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/search_container"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:visibility</span>=<span class="string">"gone"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@android:color/darker_gray"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>FrameLayout、RelativeLayout，代码中控件代码的的位置越靠后，此控件越会显示在层叠布局的上方。</p></blockquote><p><code>代码段B</code>的布局会动态加载到<code>代码段A</code>的<code>search_container</code>中，<br>并且形成重叠布局，此时 markView 会遮盖listView，但是点击事件会穿透markView传递给listView。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">代码段B</span><br><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span> &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag"> <span class="attr">android:id</span>=<span class="string">"@+id/markView"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:alpha</span>=<span class="string">"0.5"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@color/black"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>怎样解决这个问题呢？</strong></p><p>代码段B 增加一行代码<br> <code>android:clickable=&quot;true&quot;</code></p><p>变成这样<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">代码段C</span><br><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:clickable</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span> &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:alpha</span>=<span class="string">"0.5"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@color/black"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;RelativeLayout、Framelayout-两布局重叠-使下层不响应点击事件&quot;&gt;&lt;a href=&quot;#RelativeLayout、Framelayout-两布局重叠-使下层不响应点击事件&quot; class=&quot;headerlink&quot; title=&quot;Relati
      
    
    </summary>
    
      <category term="Android" scheme="https://seachal.me/categories/Android/"/>
    
    
      <category term="Android" scheme="https://seachal.me/tags/Android/"/>
    
      <category term="问题解决" scheme="https://seachal.me/tags/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
      <category term="View" scheme="https://seachal.me/tags/View/"/>
    
  </entry>
  
  <entry>
    <title>用GitBook制作一本书（从GitHub导入创建一本书）</title>
    <link href="https://seachal.me/Git/2018/01/12/VersionControl/2018-01-12/"/>
    <id>https://seachal.me/Git/2018/01/12/VersionControl/2018-01-12/</id>
    <published>2018-01-12T10:10:30.000Z</published>
    <updated>2018-10-21T07:09:54.511Z</updated>
    
    <content type="html"><![CDATA[<link href="http://github.com/yrgoldteeth/darkdowncss/raw/master/darkdown.css" rel="stylesheet"><h1 id="1创建一个Github-Repository"><a href="#1创建一个Github-Repository" class="headerlink" title="1创建一个Github Repository"></a>1创建一个Github Repository</h1><p><a href="https://github.com/new" target="_blank" rel="noopener">https://github.com/new</a><br><img src="http://p1nxdiyfl.bkt.clouddn.com/15157435127481.jpg" alt=""></p><h1 id="2创建一本书"><a href="#2创建一本书" class="headerlink" title="2创建一本书"></a>2创建一本书</h1><p><a href="https://www.gitbook.com/new" target="_blank" rel="noopener">https://www.gitbook.com/new</a></p><ol><li>选择从Github导入<br><img src="http://p1nxdiyfl.bkt.clouddn.com/15157437522947.jpg" alt=""><br>2.Github授权<br><img src="http://p1nxdiyfl.bkt.clouddn.com/15157438850691.jpg" alt=""></li></ol><h1 id="3-导入Github-Repository作为书籍"><a href="#3-导入Github-Repository作为书籍" class="headerlink" title="3 导入Github Repository作为书籍"></a>3 导入Github Repository作为书籍</h1><p>再次回到<a href="https://www.gitbook.com/new，" target="_blank" rel="noopener">https://www.gitbook.com/new，</a>  填写Book信息，选择你要导入的Github Repository<br><img src="http://p1nxdiyfl.bkt.clouddn.com/15157441137050.jpg" alt=""></p><p><img src="http://p1nxdiyfl.bkt.clouddn.com/15157444474391.jpg" alt=""></p><p>这个页面目前是在同步，等同步完毕后，就可以看到自己的书了。</p><h1 id="4去编辑自己的书吧"><a href="#4去编辑自己的书吧" class="headerlink" title="4去编辑自己的书吧"></a>4去编辑自己的书吧</h1><p>可以在浏览器编辑，也可以在客户端编辑</p><p>参考：<a href="http://blog.csdn.net/hk2291976/article/details/51173850" target="_blank" rel="noopener">http://blog.csdn.net/hk2291976/article/details/51173850</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link href=&quot;http://github.com/yrgoldteeth/darkdowncss/raw/master/darkdown.css&quot; rel=&quot;stylesheet&quot;&gt;


&lt;h1 id=&quot;1创建一个Github-Repository&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
      <category term="Git" scheme="https://seachal.me/categories/Git/"/>
    
    
      <category term="GitBook" scheme="https://seachal.me/tags/GitBook/"/>
    
      <category term="GitHub" scheme="https://seachal.me/tags/GitHub/"/>
    
  </entry>
  
</feed>
